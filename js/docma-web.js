!function(t,e){"function"==typeof define&&define.amd&&!0===define.amd.dust?define("dust.core",[],e):"object"==typeof exports?module.exports=e():t.dust=e()}(this,function(){var dust={version:"2.7.5"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){},e,g,d;function getTemplate(t,e){if(t)return"function"==typeof t&&t.template?t.template:dust.isTemplateFn(t)?t:!1!==e?dust.cache[t]:void 0}function load(e,t,i){if(!e)return t.setError(new Error("No template or template name provided to render"));var n=getTemplate(e,dust.config.cache);return n?n(t,Context.wrap(i,n.templateName)):dust.onLoad?t.map(function(r){var o=e;function t(t,e){var n;if(t)return r.setError(t);if(!(n=getTemplate(e,!1)||getTemplate(o,dust.config.cache))){if(!dust.compile)return r.setError(new Error("Dust compiler not available"));n=dust.loadSource(dust.compile(e,o))}n(r,Context.wrap(i,n.templateName)).end()}3===dust.onLoad.length?dust.onLoad(o,i.options,t):dust.onLoad(o,t)}):t.setError(new Error("Template Not Found: "+e))}function Context(t,e,n,r,o){void 0===t||t instanceof Stack||(t=new Stack(t)),this.stack=t,this.global=e,this.options=n,this.blocks=r,this.templateName=o,this._isContext=!0}function getWithResolvedData(e,n,r){return function(t){return e.push(t)._get(n,r)}}function Stack(t,e,n,r){this.tail=e,this.isObject=t&&"object"==typeof t,this.head=t,this.index=n,this.of=r}function Stub(t){this.head=new Chunk(this),this.callback=t,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(t,e,n){this.root=t,this.next=e,this.data=[],this.flushable=!1,this.taps=n}for(var f in dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},d={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4},g="undefined"!=typeof console&&console.log?"function"==typeof(e=console.log)?function(){e.apply(console,arguments)}:function(){e(Array.prototype.slice.apply(arguments).join(" "))}:EMPTY_FUNC,dust.log=function(t,e){d[e=e||INFO]>=d[dust.debugLevel]&&g("[DUST:"+e+"]",t)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG),dust.helpers={},dust.cache={},dust.register=function(t,e){t&&(e.templateName=t,!1!==dust.config.cache&&(dust.cache[t]=e))},dust.render=function(t,e,n){var r=new Stub(n).head;try{load(t,r,e).end()}catch(t){r.setError(t)}},dust.stream=function(t,e){var n=new Stream,r=n.head;return dust.nextTick(function(){try{load(t,r,e).end()}catch(t){r.setError(t)}}),n},dust.loadSource=function(source){return eval(source)},Array.isArray?dust.isArray=Array.isArray:dust.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},dust.nextTick=function(t){setTimeout(t,0)},dust.isEmpty=function(t){return 0!==t&&(!(!dust.isArray(t)||t.length)||!t)},dust.isEmptyObject=function(t){var e;if(null===t)return!1;if(void 0===t)return!1;if(0<t.length)return!1;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0},dust.isTemplateFn=function(t){return"function"==typeof t&&t.__dustBody},dust.isThenable=function(t){return t&&"object"==typeof t&&"function"==typeof t.then},dust.isStreamable=function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pipe},dust.filter=function(t,e,n,r){var o,i,s,u;if(n)for(o=0,i=n.length;o<i;o++)(s=n[o]).length&&(u=dust.filters[s],"s"===s?e=null:"function"==typeof u?t=u(t,r):dust.log("Invalid filter `"+s+"`",WARN));return e&&(t=dust.filters[e](t,r)),t},dust.filters={h:function(t){return dust.escapeHtml(t)},j:function(t){return dust.escapeJs(t)},u:encodeURI,uc:encodeURIComponent,js:function(t){return dust.escapeJSON(t)},jp:function(t){return JSON?JSON.parse(t):(dust.log("JSON is undefined; could not parse `"+t+"`",WARN),t)}},dust.makeBase=dust.context=function(t,e){return new Context(void 0,t,e)},dust.isContext=function(t){return"object"==typeof t&&!0===t._isContext},Context.wrap=function(t,e){return dust.isContext(t)?t:new Context(t,{},{},null,e)},Context.prototype.get=function(t,e){return"string"==typeof t&&("."===t[0]&&(e=!0,t=t.substr(1)),t=t.split(".")),this._get(e,t)},Context.prototype._get=function(t,e){var n,r,o,i,s,u=this.stack||{},a=1;if(r=e[0],o=e.length,t&&0===o)u=(i=u).head;else{if(t)u&&(u=u.head?u.head[r]:void 0);else{for(;u&&(!u.isObject||(i=u.head,void 0===(n=u.head[r])));)u=u.tail;u=void 0!==n?n:this.global&&this.global[r]}for(;u&&a<o;){if(dust.isThenable(u))return u.then(getWithResolvedData(this,t,e.slice(a)));u=(i=u)[e[a]],a++}}return"function"==typeof u?((s=function(){try{return u.apply(i,arguments)}catch(t){throw dust.log(t,ERROR),t}}).__dustBody=!!u.__dustBody,s):(void 0===u&&dust.log("Cannot find reference `{"+e.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),u)},Context.prototype.getPath=function(t,e){return this._get(t,e)},Context.prototype.push=function(t,e,n){return void 0===t?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(t,this.stack,e,n))},Context.prototype.pop=function(){var t=this.current();return this.stack=this.stack&&this.stack.tail,t},Context.prototype.rebase=function(t){return new Context(t,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var t=this.rebase();return t.stack=this.stack,t},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(t){var e,n,r;if("function"==typeof t&&(t=t(new Chunk,this).data.join("")),!(e=this.blocks))return dust.log("No blocks for context `"+t+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(n=e.length;n--;)if(r=e[n][t])return r;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(t){var e,n=this.blocks;return t?(e=n?n.concat([t]):[t],new Context(this.stack,this.global,this.options,e,this.getTemplateName())):this},Context.prototype.resolve=function(t){var e;return"function"!=typeof t?t:(e=(new Chunk).render(t,this))instanceof Chunk?e.data.join(""):e},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.callback(t.error),dust.log("Rendering failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=t.data.join(""),t=t.next,this.head=t}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.emit("error",t.error),this.emit("end"),dust.log("Streaming failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",t.data.join("")),t=t.next,this.head=t}this.emit("end")},Stream.prototype.emit=function(t,e){var n,r,o=(this.events||{})[t]||[];if(!o.length)return dust.log("Stream broadcasting, but no listeners for `"+t+"`",DEBUG),!1;for(n=0,r=(o=o.slice(0)).length;n<r;n++)o[n](e);return!0},Stream.prototype.on=function(t,e){var n=this.events=this.events||{},r=n[t]=n[t]||[];return"function"!=typeof e?dust.log("No callback function provided for `"+t+"` event listener",WARN):r.push(e),this},Stream.prototype.pipe=function(e){if("function"!=typeof e.write||"function"!=typeof e.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var n=!1;return"function"==typeof e.emit&&e.emit("pipe",this),"function"==typeof e.on&&e.on("error",function(){n=!0}),this.on("data",function(t){if(!n)try{e.write(t,"utf8")}catch(t){dust.log(t,ERROR)}}).on("end",function(){if(!n)try{e.end(),n=!0}catch(t){dust.log(t,ERROR)}})},Chunk.prototype.write=function(t){var e=this.taps;return e&&(t=e.go(t)),this.data.push(t),this},Chunk.prototype.end=function(t){return t&&this.write(t),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(t){var e=new Chunk(this.root,this.next,this.taps),n=new Chunk(this.root,e,this.taps);this.next=n,this.flushable=!0;try{t(n)}catch(t){dust.log(t,ERROR),n.setError(t)}return e},Chunk.prototype.tap=function(t){var e=this.taps;return this.taps=e?e.push(t):new Tap(t),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(t,e){return t(this,e)},Chunk.prototype.reference=function(t,e,n,r){return"function"==typeof t?(t=t.apply(e.current(),[this,e,null,{auto:n,filters:r}]))instanceof Chunk?t:this.reference(t,e,n,r):dust.isThenable(t)?this.await(t,e,null,n,r):dust.isStreamable(t)?this.stream(t,e,null,n,r):dust.isEmpty(t)?this:this.write(dust.filter(t,n,r,e))},Chunk.prototype.section=function(t,e,n,r){var o,i,s,u=n.block,a=n.else,c=this;if("function"==typeof t&&!dust.isTemplateFn(t)){try{t=t.apply(e.current(),[this,e,n,r])}catch(t){return dust.log(t,ERROR),this.setError(t)}if(t instanceof Chunk)return t}if(dust.isEmptyObject(n))return c;if(dust.isEmptyObject(r)||(e=e.push(r)),dust.isArray(t)){if(u){if(0<(i=t.length)){for((s=e.stack&&e.stack.head||{}).$len=i,o=0;o<i;o++)s.$idx=o,c=u(c,e.push(t[o],o,i));return s.$idx=void 0,s.$len=void 0,c}if(a)return a(this,e)}}else{if(dust.isThenable(t))return this.await(t,e,n);if(dust.isStreamable(t))return this.stream(t,e,n);if(!0===t){if(u)return u(this,e)}else if(t||0===t){if(u)return u(this,e.push(t))}else if(a)return a(this,e)}return dust.log("Section without corresponding key in template `"+e.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(o)return o(this,e)}else{if(r)return r(this,e);dust.log("No block for exists check in template `"+e.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(r)return r(this,e);dust.log("No block for not-exists check in template `"+e.getTemplateName()+"`",DEBUG)}else if(o)return o(this,e);return this},Chunk.prototype.block=function(t,e,n){var r=t||n.block;return r?r(this,e):this},Chunk.prototype.partial=function(t,e,n,r){var o;return void 0===r&&(r=n,n=e),dust.isEmptyObject(r)||(o=(n=n.clone()).pop(),n=n.push(r).push(o)),dust.isTemplateFn(t)?this.capture(t,e,function(t,e){load(n.templateName=t,e,n).end()}):load(n.templateName=t,this,n)},Chunk.prototype.helper=function(e,t,n,r,o){var i,s=this,u=r.filters;if(void 0===o&&(o="h"),!dust.helpers[e])return dust.log("Helper `"+e+"` does not exist",WARN),s;try{return(i=dust.helpers[e](s,t,n,r))instanceof Chunk?i:("string"==typeof u&&(u=u.split("|")),dust.isEmptyObject(n)?s.reference(i,t,o,u):s.section(i,t,n,r))}catch(t){return dust.log("Error in helper `"+e+"`: "+t.message,ERROR),s.setError(t)}},Chunk.prototype.await=function(t,r,o,e,i){return this.map(function(n){t.then(function(t){(n=o?n.section(t,r,o):n.reference(t,r,e,i)).end()},function(t){var e=o&&o.error;e?n.render(e,r.push(t)).end():(dust.log("Unhandled promise rejection in `"+r.getTemplateName()+"`",INFO),n.end())})})},Chunk.prototype.stream=function(t,o,i,s,u){var a=i&&i.block,e=i&&i.error;return this.map(function(n){var r=!1;t.on("data",function(e){r||(a?n=n.map(function(t){t.render(a,o.push(e)).end()}):i||(n=n.reference(e,o,s,u)))}).on("error",function(t){r||(e?n.render(e,o.push(t)):dust.log("Unhandled stream error in `"+o.getTemplateName()+"`",INFO),r||(r=!0,n.end()))}).on("end",function(){r||(r=!0,n.end())})})},Chunk.prototype.capture=function(e,r,o){return this.map(function(n){var t=new Stub(function(t,e){t?n.setError(t):o(e,n)});e(t.head,r).end()})},Chunk.prototype.setError=function(t){return this.error=t,this.root.flush(),this},Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);function Tap(t,e){this.head=t,this.tail=e}Tap.prototype.push=function(t){return new Tap(t,this)},Tap.prototype.go=function(t){for(var e=this;e;)t=e.head(t),e=e.tail;return t};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(t){return"string"==typeof t||t&&"function"==typeof t.toString?("string"!=typeof t&&(t=t.toString()),HCHARS.test(t)?t.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):t):t};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(t){return"string"==typeof t?t.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):t},dust.escapeJSON=function(t){return JSON?JSON.stringify(t).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+t+"`",WARN),t)},dust}),"function"==typeof define&&define.amd&&!0===define.amd.dust&&define(["require","dust.core"],function(n,t){return t.onLoad=function(t,e){n([t],function(){e()})},t});
!function(e,t){"function"==typeof define&&define.amd&&!0===define.amd.dust?define(["dust.core"],t):"object"==typeof exports?(module.exports=t(require("dustjs-linkedin")),module.exports.registerWith=t):t(e.dust)}(this,function(a){function k(e,t,r){r=r||"INFO",e=e?"{@"+e+"}: ":"",a.log(e+t,r)}var s={};function p(e){return(t=e).stack.tail&&t.stack.tail.head&&void 0!==t.stack.tail.head.__select__&&e.get("__select__");var t}function u(e,t){var r,n=e.stack.head,s=e.rebase();e.stack&&e.stack.tail&&(s.stack=e.stack.tail);var i={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(r in t)i[r]=t[r];return s.push({__select__:i}).push(n,e.stack.index,e.stack.of)}function d(e){var t,r;if(e.isDeferredPending=!0,e.deferreds.length)for(e.isDeferredComplete=!0,t=0,r=e.deferreds.length;t<r;t++)e.deferreds[t]();e.isDeferredPending=!1}function c(e,t){return"function"==typeof t?t.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):t}function e(s,i){return function(e,t,r,n){return function(e,t,r,n,s,i){var o,a,c,u,d=r.block,l=r.else,f=p(t)||{};if(f.isResolved&&!f.isDeferredPending)return e;if(n.hasOwnProperty("key"))a=n.key;else{if(!f.hasOwnProperty("key"))return k(s,"No key specified","WARN"),e;a=f.key}u=n.type||f.type,a=h(t.resolve(a),u),c=h(t.resolve(n.value),u),i(a,c)?(f.isPending||(o=!0,f.isPending=!0),d&&(e=e.render(d,t)),o&&(f.isResolved=!0)):l&&(e=e.render(l,t));return e}(e,t,r,n,s,i)}}function h(e,t){switch(t&&(t=t.toLowerCase()),t){case"number":return+e;case"string":return String(e);case"boolean":return e="false"!==e&&e,Boolean(e);case"date":return new Date(e)}return e}var t={tap:function(e,t,r){var n;return s[n="tap"]||(k(n,"Deprecation warning: "+n+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),k(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+n.replace(/\W+/g,""),"WARN"),s[n]=!0),r.resolve(e)},sep:function(e,t,r){var n=r.block;return t.stack.index===t.stack.of-1?e:n?n(e,t):e},first:function(e,t,r){return 0===t.stack.index?r.block(e,t):e},last:function(e,t,r){return t.stack.index===t.stack.of-1?r.block(e,t):e},contextDump:function(e,t,r,n){var s,i,o=t.resolve(n.to);switch(t.resolve(n.key)){case"full":s=t.stack;break;default:s=t.stack.head}switch(i=JSON.stringify(s,c,2),o){case"console":k("contextDump",i);break;default:i=i.replace(/</g,"\\u003c"),e=e.write(i)}return e},math:function(e,t,r,n){var s,i=n.key,o=n.method,a=n.operand,c=n.round;if(!n.hasOwnProperty("key")||!n.method)return k("math","`key` or `method` was not provided","ERROR"),e;switch(i=parseFloat(t.resolve(i)),a=parseFloat(t.resolve(a)),o){case"mod":0===a&&k("math","Division by 0","ERROR"),s=i%a;break;case"add":s=i+a;break;case"subtract":s=i-a;break;case"multiply":s=i*a;break;case"divide":0===a&&k("math","Division by 0","ERROR"),s=i/a;break;case"ceil":case"floor":case"round":case"abs":s=Math[o](i);break;case"toint":s=parseInt(i,10);break;default:k("math","Method `"+o+"` is not supported","ERROR")}return void 0!==s&&(c&&(s=Math.round(s)),r&&r.block?(t=u(t,{key:s}),e=e.render(r.block,t),d(p(t))):e=e.write(s)),e},select:function(e,t,r,n){var s=r.block,i={};return n.hasOwnProperty("key")&&(i.key=t.resolve(n.key)),n.hasOwnProperty("type")&&(i.type=n.type),s?(t=u(t,i),e=e.render(s,t),d(p(t))):k("select","Missing body block","WARN"),e},eq:e("eq",function(e,t){return e===t}),ne:e("ne",function(e,t){return e!==t}),lt:e("lt",function(e,t){return e<t}),lte:e("lte",function(e,t){return e<=t}),gt:e("gt",function(e,t){return t<e}),gte:e("gte",function(e,t){return t<=e}),any:function(e,t,r,n){var s=p(t);return s?s.isDeferredComplete?k("any","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){s.deferreds.push(function(){s.isResolved&&(e=e.render(r.block,t)),e.end()})}):k("any","Must be used inside a {@select} block","ERROR"),e},none:function(e,t,r,n){var s=p(t);return s?s.isDeferredComplete?k("none","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){s.deferreds.push(function(){s.isResolved||(e=e.render(r.block,t)),e.end()})}):k("none","Must be used inside a {@select} block","ERROR"),e},size:function(e,t,r,n){var s,i,o=n.key;if((o=t.resolve(n.key))&&!0!==o)if(a.isArray(o))s=o.length;else if(!isNaN(parseFloat(o))&&isFinite(o))s=o;else if("object"==typeof o)for(i in s=0,o)o.hasOwnProperty(i)&&s++;else s=(o+"").length;else s=0;return e.write(s)}};for(var r in t)a.helpers[r]=t[r];return a});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.page=e()}(this,function(){"use strict";var p=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},n=h,t=a,e=function(t){return o(a(t))},r=o,i=c,x=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t){for(var e,n,r=[],i=0,o=0,a="";null!=(e=x.exec(t));){var s=e[0],c=e[1],h=e.index;if(a+=t.slice(o,h),o=h+s.length,c)a+=c[1];else{a&&(r.push(a),a="");var p=e[2],f=e[3],u=e[4],l=e[5],d=e[6],m=e[7],v="+"===d||"*"===d,g="?"===d||"*"===d,y=p||"/",w=u||l||(m?".*":"[^"+y+"]+?");r.push({name:f||i++,prefix:p||"",delimiter:y,optional:g,repeat:v,pattern:(n=w,n.replace(/([=!:$\/()])/g,"\\$1"))})}}return o<t.length&&(a+=t.substr(o)),a&&r.push(a),r}function o(c){for(var h=new Array(c.length),t=0;t<c.length;t++)"object"==typeof c[t]&&(h[t]=new RegExp("^"+c[t].pattern+"$"));return function(t){for(var e="",n=t||{},r=0;r<c.length;r++){var i=c[r];if("string"!=typeof i){var o,a=n[i.name];if(null==a){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to be defined')}if(p(a)){if(!i.repeat)throw new TypeError('Expected "'+i.name+'" to not repeat, but received "'+a+'"');if(0===a.length){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to not be empty')}for(var s=0;s<a.length;s++){if(o=encodeURIComponent(a[s]),!h[r].test(o))throw new TypeError('Expected all "'+i.name+'" to match "'+i.pattern+'", but received "'+o+'"');e+=(0===s?i.prefix:i.delimiter)+o}}else{if(o=encodeURIComponent(a),!h[r].test(o))throw new TypeError('Expected "'+i.name+'" to match "'+i.pattern+'", but received "'+o+'"');e+=i.prefix+o}}else e+=i}return e}}function f(t){return t.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(t,e){return t.keys=e,t}function u(t){return t.sensitive?"":"i"}function c(t,e){for(var n=(e=e||{}).strict,r=!1!==e.end,i="",o=t[t.length-1],a="string"==typeof o&&/\/$/.test(o),s=0;s<t.length;s++){var c=t[s];if("string"==typeof c)i+=f(c);else{var h=f(c.prefix),p=c.pattern;c.repeat&&(p+="(?:"+h+p+")*"),i+=p=c.optional?h?"(?:"+h+"("+p+"))?":"("+p+")?":h+"("+p+")"}}return n||(i=(a?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&a?"":"(?=\\/|$)",new RegExp("^"+i,u(e))}function h(t,e,n){return p(e=e||[])?n||(n={}):(n=e,e=[]),t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return s(t,e)}(t,e):p(t)?function(t,e,n){for(var r=[],i=0;i<t.length;i++)r.push(h(t[i],e,n).source);return s(new RegExp("(?:"+r.join("|")+")",u(n)),e)}(t,e,n):function(t,e,n){for(var r=a(t),i=c(r,n),o=0;o<r.length;o++)"string"!=typeof r[o]&&e.push(r[o]);return s(i,e)}(t,e,n)}n.parse=t,n.compile=e,n.tokensToFunction=r,n.tokensToRegExp=i;var l=L;(L.default=L).Context=P,L.Route=S,L.sameOrigin=N;var d,m,v,g="undefined"!=typeof document,y="undefined"!=typeof window,w="undefined"!=typeof history,b="undefined"!=typeof process,E=g&&document.ontouchstart?"touchstart":"click",R=y&&!(!window.history.location&&!window.location),k=!0,A=!0,T="",O=!1,C=!1;function L(t,e){if("function"==typeof t)return L("*",t);if("function"==typeof e)for(var n=new S(t),r=1;r<arguments.length;++r)L.callbacks.push(n.middleware(arguments[r]));else"string"==typeof t?L["string"==typeof e?"redirect":"show"](t,e):L.start(t)}function U(t){return"string"!=typeof t?t:A?decodeURIComponent(t.replace(/\+/g," ")):t}function P(t,e){var n=I();"/"===t[0]&&0!==t.indexOf(n)&&(t=n+(C?"#!":"")+t);var r=t.indexOf("?");if(this.canonicalPath=t,this.path=t.replace(n,"")||"/",C&&(this.path=this.path.replace("#!","")||"/"),this.title=g&&v.document.title,this.state=e||{},this.state.path=t,this.querystring=~r?U(t.slice(r+1)):"",this.pathname=U(~r?t.slice(0,r):t),this.params={},this.hash="",!C){if(!~this.path.indexOf("#"))return;var i=this.path.split("#");this.path=this.pathname=i[0],this.hash=U(i[1])||"",this.querystring=this.querystring.split("#")[0]}}function S(t,e){(e=e||{}).strict=e.strict||O,this.path="*"===t?"(.*)":t,this.method="GET",this.regexp=n(this.path,this.keys=[],e)}L.callbacks=[],L.exits=[],L.current="",L.len=0,L.base=function(t){if(0===arguments.length)return T;T=t},L.strict=function(t){if(0===arguments.length)return O;O=t},L.start=function(t){if(t=t||{},!d&&(d=!0,v=t.window||y&&window,!1===t.dispatch&&(k=!1),!1===t.decodeURLComponents&&(A=!1),!1!==t.popstate&&y&&v.addEventListener("popstate",$,!1),!1!==t.click&&g&&v.document.addEventListener(E,j,!1),(C=!!t.hashbang)&&y&&!w&&v.addEventListener("hashchange",$,!1),k)){var e;if(R){var n=v.location;e=C&&~n.hash.indexOf("#!")?n.hash.substr(2)+n.search:C?n.search+n.hash:n.pathname+n.search+n.hash}L.replace(e,null,!0,k)}},L.stop=function(){d&&(L.current="",L.len=0,d=!1,g&&v.document.removeEventListener(E,j,!1),y&&v.removeEventListener("popstate",$,!1),y&&v.removeEventListener("hashchange",$,!1))},L.show=function(t,e,n,r){var i=new P(t,e),o=m;return L.current=(m=i).path,!1!==n&&L.dispatch(i,o),!1!==i.handled&&!1!==r&&i.pushState(),i},L.back=function(t,e){0<L.len?(w&&v.history.back(),L.len--):t?setTimeout(function(){L.show(t,e)}):setTimeout(function(){L.show(I(),e)})},L.redirect=function(t,e){"string"==typeof t&&"string"==typeof e&&L(t,function(t){setTimeout(function(){L.replace(e)},0)}),"string"==typeof t&&void 0===e&&setTimeout(function(){L.replace(t)},0)},L.replace=function(t,e,n,r){var i=new P(t,e),o=m;return L.current=(m=i).path,i.init=n,i.save(),!1!==r&&L.dispatch(i,o),i},L.dispatch=function(e,n){var r=0,i=0;function o(){var t=L.callbacks[r++];if(e.path===L.current)return t?void t(e,o):function(t){if(t.handled)return;var e;e=C?R&&I()+v.location.hash.replace("#!",""):R&&v.location.pathname+v.location.search;if(e===t.canonicalPath)return;L.stop(),t.handled=!1,R&&(v.location.href=t.canonicalPath)}(e);e.handled=!1}n?function t(){var e=L.exits[i++];if(!e)return o();e(n,t)}():o()},L.exit=function(t,e){if("function"==typeof t)return L.exit("*",t);for(var n=new S(t),r=1;r<arguments.length;++r)L.exits.push(n.middleware(arguments[r]))},(L.Context=P).prototype.pushState=function(){L.len++,w&&v.history.pushState(this.state,this.title,C&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},P.prototype.save=function(){w&&"file:"!==v.location.protocol&&v.history.replaceState(this.state,this.title,C&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},(L.Route=S).prototype.middleware=function(n){var r=this;return function(t,e){if(r.match(t.path,t.params))return n(t,e);e()}},S.prototype.match=function(t,e){var n=this.keys,r=t.indexOf("?"),i=~r?t.slice(0,r):t,o=this.regexp.exec(decodeURIComponent(i));if(!o)return!1;for(var a=1,s=o.length;a<s;++a){var c=n[a-1],h=U(o[a]);void 0===h&&hasOwnProperty.call(e,c.name)||(e[c.name]=h)}return!0};var $=function(){var r=!1;if(y)return g&&"complete"===document.readyState?r=!0:window.addEventListener("load",function(){setTimeout(function(){r=!0},0)}),function(t){if(r)if(t.state){var e=t.state.path;L.replace(e,t.state)}else if(R){var n=v.location;L.show(n.pathname+n.hash,void 0,void 0,!1)}}}();function j(t){var e;if(1===(null==(e=(e=t)||y&&window.event).which?e.button:e.which)&&!(t.metaKey||t.ctrlKey||t.shiftKey||t.defaultPrevented)){var n=t.target,r=t.path||(t.composedPath?t.composedPath():null);if(r)for(var i=0;i<r.length;i++)if(r[i].nodeName&&"A"===r[i].nodeName.toUpperCase()&&r[i].href){n=r[i];break}for(;n&&"A"!==n.nodeName.toUpperCase();)n=n.parentNode;if(n&&"A"===n.nodeName.toUpperCase()){var o="object"==typeof n.href&&"SVGAnimatedString"===n.href.constructor.name;if(!n.hasAttribute("download")&&"external"!==n.getAttribute("rel")){var a=n.getAttribute("href");if((C||!function(t){if(!R)return!1;var e=v.location;return t.pathname===e.pathname&&t.search===e.search}(n)||!n.hash&&"#"!==a)&&!(a&&-1<a.indexOf("mailto:"))&&(o?!n.target.baseVal:!n.target)&&(o||N(n.href))){var s=o?n.href.baseVal:n.pathname+n.search+(n.hash||"");s="/"!==s[0]?"/"+s:s,b&&s.match(/^\/[a-zA-Z]:\//)&&(s=s.replace(/^\/[a-zA-Z]:\//,"/"));var c=s,h=I();0===s.indexOf(h)&&(s=s.substr(T.length)),C&&(s=s.replace("#!","")),h&&c===s||(t.preventDefault(),L.show(c))}}}}}function N(t){if(!t||!R)return!1;var e=function(t){if("function"==typeof URL&&R)return new URL(t,location.toString());if(g){var e=document.createElement("a");return e.href=t,e}}(t),n=v.location;return n.protocol===e.protocol&&n.hostname===e.hostname&&n.port===e.port}function I(){if(T)return T;var t=y&&v&&v.location;return y&&C&&t&&"file:"===t.protocol?t.pathname:T}return L.sameOrigin=N,l});
!function(e){"use strict";function t(){}var n=t.prototype,r=e.EventEmitter;function s(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function i(e){return function(){return this[e].apply(this,arguments)}}n.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp)for(n in t={},r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n]);else t=r[e]||(r[e]=[]);return t},n.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},n.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&((t={})[e]=n),t||n},n.addListener=function(e,t){if(!function e(t){return"function"==typeof t||t instanceof RegExp||!(!t||"object"!=typeof t)&&e(t.listener)}(t))throw new TypeError("listener must be a function");var n,r=this.getListenersAsObject(e),i="object"==typeof t;for(n in r)r.hasOwnProperty(n)&&-1===s(r[n],t)&&r[n].push(i?t:{listener:t,once:!1});return this},n.on=i("addListener"),n.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},n.once=i("addOnceListener"),n.defineEvent=function(e){return this.getListeners(e),this},n.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},n.removeListener=function(e,t){var n,r,i=this.getListenersAsObject(e);for(r in i)i.hasOwnProperty(r)&&-1!==(n=s(i[r],t))&&i[r].splice(n,1);return this},n.off=i("removeListener"),n.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},n.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},n.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},n.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},n.removeAllListeners=i("removeEvent"),n.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(s in o)if(o.hasOwnProperty(s))for(n=o[s].slice(0),i=0;i<n.length;i++)!0===(r=n[i]).once&&this.removeListener(e,r.listener),r.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},n.trigger=i("emitEvent"),n.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},n.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},n._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},n._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return e.EventEmitter=r,t},"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:e.EventEmitter=t}(this||{});
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.<br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar","enabled"]),ctx,{"block":body_1},{}).w("<div id=\"page-content-wrapper\"><div class=\"container\"><br />").s(ctx.get(["documentation"], false),ctx,{"block":body_2},{}).w("<br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://onury.io/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class='").h("eq",ctx,{"block":body_1},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("'><div id=\"docma-content\"></div>").h("eq",ctx,{"block":body_2},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("</div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("container container-boxed");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://onury.io/docma\">Docma</a></b>.</span>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","enums"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Enumeration</div><ul class=\"param-list\">").s(ctx.get(["$members"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\"><span class=\"param-info value\">Value:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","enabled"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar ").x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"block":body_2},{}).w("\"><div class=\"navbar-inner ").x(ctx.get(["boxed"], false),ctx,{"block":body_3},{}).w("\"><div class=\"navbar-brand\">").x(ctx.getPath(false, ["template","options","logo","dark"]),ctx,{"block":body_4},{}).w("<span class=\"navbar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").h("gt",ctx,{"block":body_7},{"key":ctx.getPath(false, ["template","options","navbar","menu","length"]),"value":0},"h").w("</div></nav>").x(ctx.getPath(false, ["template","options","navbar","fixed"]),ctx,{"block":body_16},{}).w("<div class=\"nav-overlay\"></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("dark");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"else":body_5,"block":body_6},{});}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","dark"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<div class=\"navbar-menu-btn\" tabindex=\"0\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i><i class=\"fas fa-md fa-times trans-all-ease\"></i></div><div class=\"navbar-menu\"><ul class=\"navbar-list\">").s(ctx.getPath(false, ["template","options","navbar","menu"]),ctx,{"block":body_8},{}).w("</ul></div>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_9,"block":body_10},{});}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_11,"block":body_12},{}).w("\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>").x(ctx.get(["label"], false),ctx,{"block":body_13},{}).x(ctx.get(["chevron"], false),ctx,{"block":body_14},{}).w("</a><ul>").s(ctx.get(["items"], false),ctx,{"block":body_15},{}).w("</ul></li>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("#");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h").w("</span>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<i class=\"nav-arrow fas fa-sm fa-angle-down\"></i>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w(" ").p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{}).w(" ");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.w("<div class=\"nav-spacer\"></div>");}body_16.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_6},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).x(ctx.get(["label"], false),ctx,{"block":body_5},{}).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h",["s"]).w("</span>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_6.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_8},{"key":ctx.getPath(false, ["template","options","symbols","params"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Parameters</div><ul class=\"param-list\">").s(ctx.get(["params"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").x(ctx.get(["variable"], false),ctx,{"block":body_4},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").x(ctx.get(["variable"], false),ctx,{"block":body_5},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\">").x(ctx.get(["optional"], false),ctx,{"else":body_6,"block":body_7},{}).w("</span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("...");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("...");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<span class=\"param-info default\">Default:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_9},{}).w("</tbody></table>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<tr><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_10},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_11},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"else":body_12,"block":body_13},{}).f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("...");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("...");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"param-info default boxed\">Default</span><span class=\"color-gray\">:</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_13.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","props"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Properties</div><ul class=\"param-list\">").s(ctx.get(["properties"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div id=\"sidebar-toggle\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i></div><div class=\"sidebar-brand\">").x(ctx.getPath(false, ["template","options","logo","light"]),ctx,{"block":body_1},{}).w("<span class=\"sidebar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").x(ctx.getPath(false, ["template","options","sidebar","search"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["template","options","sidebar","toolbar"]),ctx,{"block":body_3},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").f(ctx.get(["symbols"], false),ctx,"h",["s","$navnodes"]).w("</ul></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"sidebar-logo\" />");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"sidebar-search\"><div class=\"sidebar-search-icon\"><i class=\"fas fa-md fa-search\"></i></div><input id=\"txt-search\" type=\"search\" placeholder=\"Search...\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" /><div class=\"sidebar-search-clean\"><i class=\"fas fa-lg fa-times-circle\"></i></div></div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<div class=\"sidebar-toolbar\"><div class=\"toolbar-scope-filters\"></div><div class=\"toolbar-kind-filters\"></div><div class=\"toolbar-buttons\"><span class=\"btn-switch-fold inline-block\" title=\"Fold Symbols\">").h("eq",ctx,{"else":body_4,"block":body_5},{"key":ctx.getPath(false, ["template","options","sidebar","itemsFolded"]),"type":"boolean","value":"true"},"h").w("</span><span class=\"btn-switch-outline inline-block space-left-xs\" title=\"Toggle Outline\">").h("eq",ctx,{"else":body_6,"block":body_7},{"key":ctx.getPath(false, ["template","options","sidebar","outline"]),"type":"string","value":"tree"},"h").w("</span></div></div>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-down\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-right\"></i>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-outdent\"></i>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-indent\"></i>");}body_7.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.nx(ctx.getPath(false, ["symbol","$hide"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\"><i class=\"fas fa-link color-gray-light\" aria-hidden=\"true\"></i></a><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$type"]).w("</code>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div></div><div class=\"symbol-definition\"><div class=\"symbol-info\">").x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","since"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_7},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_8},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_9},{}).w("</div>").f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_10},{}).h("ne",ctx,{"block":body_15},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","fires"]),ctx,{"block":body_18},{}).x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_20},{}).x(ctx.getPath(false, ["symbol","generator"]),ctx,{"block":body_23},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_27},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_30},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_31},{}).x(ctx.getPath(false, ["template","options","symbols","meta"]),ctx,{"block":body_34},{}).w("</div></div><hr />").x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_38},{}).nx(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_40},{});}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.nx(ctx.get(["$constructor"], false),ctx,{"block":body_3},{});}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<p><b class=\"caption\">Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<p><b class=\"caption\">Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<p><b class=\"caption\">Version:</b>&nbsp;").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</p>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<p><b class=\"caption\">Since:</b>&nbsp;").f(ctx.getPath(false, ["symbol","since"]),ctx,"h",["s"]).w("</p>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<p><b class=\"caption\">Copyright:</b>&nbsp;").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</p>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b class=\"caption\">Author:</b>&nbsp;").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</p>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<p><b class=\"caption\">License:</b>&nbsp;").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</p>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<p class=\"no-margin\"><b>See</b>").h("gt",ctx,{"else":body_11,"block":body_13},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_12},{});}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_14},{}).w("</ul>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_16,"block":body_17},{});}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_16.__dustBody=!0;function body_17(chk,ctx){return chk;}body_17.__dustBody=!0;function body_18(chk,ctx){return chk.h("gt",ctx,{"block":body_19},{"key":ctx.getPath(false, ["symbol","fires","length"]),"value":"0","type":"number"},"h");}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.w("<p><b class=\"caption\">Emits:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$emits"]).w("</p>");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.h("gt",ctx,{"else":body_21,"block":body_22},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<p><b class=\"caption\">Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<b class=\"caption\">Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","yields"]),ctx,{"block":body_24},{});}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.h("gt",ctx,{"else":body_25,"block":body_26},{"key":ctx.getPath(false, ["symbol","yields","length"]),"value":"1","type":"number"},"h");}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.w("<p><b class=\"caption\">Yields:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<b class=\"caption\">Yields:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.h("gt",ctx,{"else":body_28,"block":body_29},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.w("<p><b class=\"caption\">Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<b class=\"caption\">Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_32},{});}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.w("<p><b>Example").h("gt",ctx,{"block":body_33},{"key":ctx.getPath(false, ["symbol","examples","length"]),"value":1},"h").w("</b>").f(ctx.getPath(true, []),ctx,"h",["$get_caption","s"]).w("</p><pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt","$tnl","$remove_caption"]).w("</code></pre>");}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.w("&nbsp;#").h("math",ctx,{},{"key":ctx.get(["$idx"], false),"method":"add","operand":"1"},"h");}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_35},{});}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_36},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_37},{}).w("</p>");}body_35.__dustBody=!0;function body_36(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_36.__dustBody=!0;function body_37(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_37.__dustBody=!0;function body_38(chk,ctx){return chk.h("ne",ctx,{"block":body_39},{"key":ctx.getPath(false, ["symbol","hideconstructor"]),"type":"boolean","value":"true"},"h");}body_38.__dustBody=!0;function body_39(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_39.__dustBody=!0;function body_40(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_41},{});}body_40.__dustBody=!0;function body_41(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_41.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var DocmaWeb = (function () {
'use strict';

var Utils={};function getStr(e){return e&&""!==e.trim()?e:null}function cleanName(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2").replace(/^(module\.)?exports\./,"")}function getMetaCodeName(e){return cleanName(Utils.notate(e,"meta.code.name")||"")}function identity(e){return e}Utils.type=function(e){return Object.prototype.toString.call(e).match(/\s(\w+)/i)[1].toLowerCase()},Utils.notate=function(e,t){if("object"==typeof e){var n,r=Array.isArray(t)?t:t.split("."),i=r[0];if(i)return n=e[i],1<r.length?(r.shift(),Utils.notate(n,r)):n}},Utils.getName=function(e){if(e.alias){var t=getMetaCodeName(e);if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},Utils.getLongName=function(e){var t=cleanName(e.longname),n=getMetaCodeName(e)||t,r=cleanName(e.memberof||"");if(e.name===r&&Utils.isConstructor(e))return n;var i=e.alias?n:t;if(!r)return i;var l=new RegExp("^"+r+"[#.~:]"),o="instance"===e.scope?"#":".";return l.test(i)?i:r+o+i},Utils.getFullName=Utils.getLongName,Utils.getCodeName=function(e){return getMetaCodeName(e)||Utils.getLongName(e)},Utils.getSymbolByName=function(e,t){var n,r,i,l;if("object"===Utils.type(e)){var o=Object.keys(e);for(n=0;n<o.length;n++)if(i=e[o[n]].documentation,l=Utils.getSymbolByName(i,t))return l;return null}for(i=e,n=0;n<i.length;n++){if((r=i[n]).name===t||r.longname===t||Utils.getFullName(r)===t)return r;if(r.$members&&(l=Utils.getSymbolByName(r.$members,t)))return l}return null},Utils.getLevels=function(e){var t=("string"==typeof e?e:e.$longname)||"";return(t=cleanName(t))?((t||"").split(/[.#~]/)||[]).length:0},Utils.getParentName=function(e){var t;if("string"!=typeof e){if(e.memberof)return cleanName(e.memberof);t=cleanName(e.$longname)}else t=cleanName(e);return t&&/[.#~]/g.test(t)?t.replace(/[.#~][^.#~]*$/,""):""},Utils.getParent=function(e,t){var n="string"==typeof t?Utils.getSymbolByName(e,t):t;if(!n)return null;var r=n&&cleanName(n.memberof)||Utils.getParentName(t);return r?Utils.getSymbolByName(e,r):null},Utils.isDeprecated=function(e){return e.deprecated},Utils.isGlobal=function(e){return"global"===e.scope},Utils.isNamespace=function(e){return"namespace"===e.kind},Utils.isModule=function(e){return"module"===e.kind},Utils.isMixin=function(e){return"mixin"===e.kind},Utils.isClass=function(e){return"class"===e.kind&&"MethodDefinition"!==Utils.notate(e,"meta.code.type")},Utils.isConstant=function(e){return"constant"===e.kind},Utils.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===Utils.notate(e,"meta.code.type")},Utils.isStaticMember=function(e){return"static"===e.scope},Utils.isStatic=Utils.isStaticMember,Utils.isInner=function(e){return"inner"===e.scope},Utils.isInstanceMember=function(e){return"instance"===e.scope},Utils.isInterface=function(e){return"interface"===e.scope},Utils.isMethod=function(e){var t=Utils.notate(e,"meta.code.type");return"function"===e.kind||"FunctionExpression"===t||"FunctionDeclaration"===t},Utils.isFunction=Utils.isMethod,Utils.isInstanceMethod=function(e){return Utils.isInstanceMember(e)&&Utils.isMethod(e)},Utils.isStaticMethod=function(e){return Utils.isStaticMember(e)&&Utils.isMethod(e)},Utils.isProperty=function(e){return"member"===e.kind&&!Utils.isMethod(e)},Utils.isInstanceProperty=function(e){return Utils.isInstanceMember(e)&&Utils.isProperty(e)},Utils.isStaticProperty=function(e){return Utils.isStaticMember(e)&&Utils.isProperty(e)},Utils.isTypeDef=function(e){return"typedef"===e.kind},Utils.isCustomType=Utils.isTypeDef,Utils.isCallback=function(e){var t=(e.type||{}).names||[];return"typedef"===e.kind&&0<=(e.comment||"").indexOf("@callback "+e.longname)&&1===t.length&&"function"===t[0]},Utils.isEnum=function(e){return Boolean(e.isEnum)},Utils.isEvent=function(e){return"event"===e.kind},Utils.isExternal=function(e){return"external"===e.kind},Utils.isGenerator=function(e){return e.generator&&"function"===e.kind},Utils.isReadOnly=function(e){return e.readonly},Utils.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},Utils.isPrivate=function(e){return"private"===e.access},Utils.isPackagePrivate=function(e){return"package"===e.access},Utils.isProtected=function(e){return"protected"===e.access},Utils.isUndocumented=function(e){return!e.comments},Utils.hasDescription=function(e){return Boolean(getStr(e.classdesc)||getStr(e.description))},Utils.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},Utils.trimNewLines=function(e){return e.replace(/^[\r\n]+|[\r\n]+$/,"")},Utils.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,t,n){return Utils.normalizeTabs(Utils._wrapCode(n,!0,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,t,n){return Utils._wrapCode(n,!0)})},Utils.parseNewLines=function(e,r){return r=r||{},Utils._tokenize(e,function(e,t){if(t)return e;var n=e.split(/[\r\n]{2,}/);return n.length<=1&&r.keepIfSingle?e:n.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},Utils.parseLinks=function(e,l){l=l||{};var t=e.replace(/\{@link +([^}]*?)\}/g,function(e,t){var n,r,i=t.split("|");return 1===i.length?n=r=i[0].trim():(n=i[0].trim(),r=i[1].trim()),'<a href="'+n+'"'+(l.target?' target="'+l.target+'"':"")+">"+r+"</a>"});return Utils.parseTicks(t)},Utils.parse=function(e,t){return t=t||{},e=Utils.trimLeft(e),e=Utils.parseNewLines(e,t),e=Utils.parseTicks(e),Utils.parseLinks(e,t)},Utils.normalizeTabs=function(e){var r,t=e.match(/^\s*/gm),n=1/0;if(t.forEach(function(e,t){e=e.replace(/\t/g,"  "),0<t&&(n=Math.min(e.length,n))}),n!==1/0){var i=new RegExp("^\\s{"+n+"}","g");e=e.replace(i,"")}return(e=e.replace(/^\s*/,"")).replace(/([\r\n]+)(\s+)/gm,function(e,t,n){return r=n.replace(/\t/g,"  "),t+(r=new Array(r.length-r.length%2+1).join(" "))})},Utils.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var t=Utils.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.$kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return Utils.isConstructor(e)&&(t+=" constructor"),Utils.isMethod(e)&&(t+=" method"),Utils.isProperty(e)&&(t+=" property"),t.replace(/[><"'`\n\r]/g,"").toLowerCase()},Utils.getCodeFileInfo=function(e){return{filename:Utils.notate(e,"meta.filename"),lineno:Utils.notate(e,"meta.lineno"),path:Utils.notate(e,"meta.path")}},Utils.getSymbolLink=function(e,t){if("string"!=typeof t)return t.$docmaLink;var n=Utils.getSymbolByName(e,t);return n?n.$docmaLink:""};var reEndBrackets=/\[\]$/,reTypeParts=/^([^<]+?)(?:\.)?(?:<([^>]+)>)?(\[\])?$/;function _link(e,t,n){var r,i=reEndBrackets.test(t)?"[]":"",l=t.replace(reEndBrackets,""),o=n||{},a="";return"internal"!==o.linkType&&(r=Utils._getTypeExternalLink(l))&&(a=' target="_blank"'),r||"external"===o.linkType||(r=Utils.getSymbolLink(e,l)),r&&(t='<a href="'+r+'"'+a+">"+(o.displayText||l)+i+"</a>"),t}function decodeHash(e){return decodeURIComponent(e).replace(/^#/,"")}Utils._parseAnchorLinks=function(t,e,n){var r=e.match(reTypeParts);if(!r||!r[1])return"";var i=r[3]||"",l="";return r[2]&&(l=(l=r[2].split("|")).map(function(e){return _link(t,e,n)}).join('<span class="code-delim">|</span>'))&&(l="&lt;"+l+"&gt;"),_link(t,r[1],n)+l+i},Utils.getTypes=function(t,e,n){var r=n||{},i="class"===e.kind?["class"]:Utils.notate(e,"type.names")||[];return i=i.map(function(e){return r.links&&(e=Utils._parseAnchorLinks(t,e,{linkType:r.links})),e}).join('<span class="code-delim">|</span>'),e.isEnum?"enum&lt;"+i+"&gt;":i},Utils.getReturnTypes=function(r,e,t){var n=e.returns;if(!Array.isArray(n))return"void";var i=t||{},l=n.reduce(function(e,t){var n=Utils.notate(t,"type.names")||[];return i.links&&(n=n.map(function(e){return Utils._parseAnchorLinks(r,e,{linkType:i.links})})),e.concat(n)},[]);return 0<l.length?l.join('<span class="code-delim">|</span>'):"void"},Utils.getCodeTags=function(n,e,t){var r=t||{};return e.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(r.demileter||",")},Utils.getFormattedTypeList=function(n,e,t){if(!e||0===e.length)return"";var r=t||{},i='<span class="code-delim">'+(r.delimeter||"|")+"</span>",l="boolean"!=typeof r.descriptions||r.descriptions,o=r.descDelimeter||"&nbsp;&nbsp;—&nbsp;&nbsp;",a="",s=e.map(function(e){l&&(a=Utils.parse(e.description||"",{keepIfSingle:!0}))&&(a=o+a);var t=e.type.names;return(t=t.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)})).join(i)+a});return 1<s.length?"<ul><li>"+s.join("</li><li>")+"</li></ul>":s},Utils.getEmittedEvents=function(n,e,t){if(!e||0===e.length)return"";var r,i,l=t||{},o=l.delimeter||", ";return(e||[]).map(function(e){if(r=e.split(/\s*[\s-—]\s*/g),i=(r[0]||"").trim(),l.links){var t=Utils._parseAnchorLinks(n,i,{linkType:l.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(i,!0)}).join(o)},Utils._find=function(e,t){if(!e||!t)return null;var n,r,i=null;for(n=0;n<e.length;n++)if((r=e[n])&&"object"==typeof r){for(var l in t)if(void 0!==t[l]&&t.hasOwnProperty(l)){if(t[l]!==r[l]){i=null;break}i=r}if(i)break}return i},Utils._assign=function(e,t,n){var r;for(r in e=e||{},t)t.hasOwnProperty(r)&&(n?Object.defineProperty(e,r,{enumerable:!0,value:t[r]}):e[r]=t[r]);return e},Utils._values=function(e){if(Array.isArray(e))return e;var t,n=[];for(t in e)e.hasOwnProperty(t)&&n.push(e[t]);return n},Utils._wrapCode=function(e,t,n){return void 0!==t&&!0!==t||(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;")),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},Utils._tokenize=function(e,t){"function"!=typeof t&&(t=identity);if(e.indexOf("```")<0)return[t(e,!1)];var n,r="```".length,i="",l="",o=[],a=!1;for(n=0;n<e.length;n++)i+=e[n],l+=e[n],i.length>r&&(i=i.slice(-r)),"```"===i&&(l=(a=!a)?(o.push(t(l.slice(0,-r),!1)),i):(o.push(t(l,!0)),""));return o},Utils._ensureSlash=function(e,t,n){return t?(e&&"/"!==t.slice(0,1)&&(t="/"+t),n&&"/"!==t.slice(-1)&&(t+="/"),t):e||n?"/":""},Utils.DOM={};var ATTR_BODY_STYLE="data-body-style";Utils.DOM.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var r=document.documentElement;return{top:n.top+window.pageYOffset-r.clientTop,left:n.left+window.pageXOffset-r.clientLeft}}}},Utils.DOM.scrollTo=function(e){var t=document.documentElement||document.body;if(e=decodeHash(e||window.location.hash||"")){var n=document.getElementById(e);n&&(t.scrollTop=Utils.DOM.getOffset(n).top)}else t.scrollTop=0},Utils.DOM._createChild=function(e,t,n){n=n||{};var r=document.createElement(t||"div");return Object.keys(n).forEach(function(e){r[e]=n[e]}),e.appendChild(r),r},Utils.DOM._removePrevBodyStyles=function(){for(var e=document.getElementsByTagName("head")[0].querySelectorAll("["+ATTR_BODY_STYLE+"]");0<e.length;)e[0].parentNode.removeChild(e[0])},Utils.DOM._moveBodyStylesToHead=function(){var e,t,n=document.getElementsByTagName("head")[0],r=document.body.getElementsByTagName("style");for(e=0;e<r.length;e++)(t=r[e]).parentNode.removeChild(t),t.setAttribute(ATTR_BODY_STYLE,""),n.appendChild(t)};var _builtinURLs={globals:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/",statements:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/",operators:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/",functions:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/",web:"https://developer.mozilla.org/en-US/docs/Web/API/"},_builtins={globals:["Infinity","NaN","undefined","null","Object","Function","function","Boolean","boolean","Symbol","Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","Number","number","Math","Date","String","string","RegExp","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Map","Set","WeakMap","WeakSet","ArrayBuffer","DataView","JSON","Promise","Generator","GeneratorFunction","Reflect","Proxy","TypedArray","Intl","Intl.Collator","Intl.DateTimeFormat","Intl.NumberFormat","WebAssembly","WebAssembly.Module","WebAssembly.Instance","WebAssembly.Memory","WebAssembly.Table","WebAssembly.CompileError","WebAssembly.LinkError","WebAssembly.RuntimeError"],statements:["function","function*","async function","class","debugger"],operators:["void","super","this"],functions:["arguments"],web:["AbstractWorker","AnalyserNode","AudioBuffer","AudioContext","AudioListener","AudioNode","BaseAudioContext","BeforeUnloadEvent","Blob","BlobEvent","BufferSource","ByteString","CSSMediaRule","CSSPageRule","CSSPrimitiveValue","CSSRule","CSSRuleList","CSSStyleDeclaration","CSSStyleRule","CSSStyleSheet","CSSSupportsRule","CSSValue","CSSValueList","CloseEvent","CompositionEvent","Console","Coordinates","Crypto","CryptoKey","CustomEvent","DOMException","DOMImplementation","Document","DocumentFragment","DocumentType","DoubleRange","DragEvent","Element","ErrorEvent","Event","EventListener","EventSource","EventTarget","File","FileList","FileReader","FileReaderSync","FormData","Geolocation","HTMLAnchorElement","HTMLAreaElement","HTMLAudioElement","HTMLBRElement","HTMLBaseElement","HTMLBodyElement","HTMLButtonElement","HTMLCanvasElement","HTMLCollection","HTMLDListElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDivElement","HTMLDocument","HTMLElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormControlsCollection","HTMLFormElement","HTMLHRElement","HTMLHeadElement","HTMLHeadingElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLKeygenElement","HTMLLIElement","HTMLLabelElement","HTMLLegendElement","HTMLLinkElement","HTMLMapElement","HTMLMediaElement","HTMLMetaElement","HTMLMeterElement","HTMLModElement","HTMLOListElement","HTMLObjectElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOptionsCollection","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSlotElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableDataCellElement","HTMLTableElement","HTMLTableHeaderCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTemplateElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLUnknownElement","HTMLVideoElement","HashChangeEvent","History","ImageData","InputEvent","KeyboardEvent","LinkStyle","Location","LongRange","MediaDevices","MediaDeviceInfo","MediaError","MediaRecorder","MediaStream","MessageChannel","MessageEvent","MessagePort","MouseEvent","MutationObserver","MutationRecord","NamedNodeMap","Navigator","NavigatorGeolocation","Node","NodeIterator","NodeList","NonDocumentTypeChildNode","Notification","PageTransitionEvent","PointerEvent","PopStateEvent","Position","PositionError","PositionOptions","ProgressEvent","PromiseRejectionEvent","RTCCertificate","RTCConfiguration","RTCDTMFSender","RTCDTMFToneChangeEvent","RTCDataChannel","RTCPeerConnection","RTCPeerConnection","RTCRtpCodecParameters","RTCRtpContributingSource","RTCRtpReceiver","RTCRtpSender","RTCRtpSynchronizationSource","RTCRtpTransceiver","RTCRtpTransceiverDirection","RTCRtpTransceiverInit","RTCStatsReport","RadioNodeList","RandomSource","Range","RenderingContext","SVGAnimateElement","SVGAnimateMotionElement","SVGAnimateTransformElement","SVGAnimationElement","SVGCircleElement","SVGClipPathElement","SVGCursorElement","SVGElement","SVGEllipseElement","SVGEvent","SVGFilterElement","SVGGeometryElement","SVGGradientElement","SVGGraphicsElement","SVGImageElement","SVGLineElement","SVGLinearGradientElement","SVGMPathElement","SVGMaskElement","SVGMetadataElement","SVGPathElement","SVGPatternElement","SVGPolygonElement","SVGPolylineElement","SVGRadialGradientElement","SVGRect","SVGRectElement","SVGSVGElement","SVGScriptElement","SVGSetElement","SVGStopElement","SVGStyleElement","SVGSwitchElement","SVGSymbolElement","SVGTSpanElement","SVGTextContentElement","SVGTextElement","SVGTextPathElement","SVGTextPositioningElement","SVGTitleElement","SVGTransform","SVGTransformList","SVGTransformable","SVGUseElement","SVGViewElement","ShadowRoot","SharedWorker","Storage","StorageEvent","StyleSheet","StyleSheetList","Text","TextMetrics","TimeEvent","TimeRanges","Touch","TouchEvent","TouchList","Transferable","TreeWalker","UIEvent","URL","WebGLActiveInfo","WebGLBuffer","WebGLContextEvent","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLRenderingContext","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject","WebSocket","WheelEvent","Window","Worker","WorkerGlobalScope","WorkerLocation","WorkerNavigator","XMLHttpRequest","XMLHttpRequestEventTarget","XMLSerializer","XPathExpression","XPathResult","XSLTProcessor"]},_cats=Object.keys(_builtins);Utils._getTypeExternalLink=function(e){var t,n;for(t=0;t<_cats.length;t++)if(n=_cats[t],0<=_builtins[n].indexOf(e))return _builtinURLs[n]+e.replace(/^([^.]*\.)/,"");return""};

function DocmaWeb(t){this._=t||{},this._.initialLoad=!1,this._.appEntranceRI=null,this._.emitter=new EventEmitter,Object.defineProperty(this,"app",{configurable:!1,get:function(){return this._.app||null}}),Object.defineProperty(this,"apis",{configurable:!1,get:function(){return this._.apis||{}}}),Object.defineProperty(this,"routes",{configurable:!1,get:function(){return this._.routes||{}}}),Object.defineProperty(this,"template",{configurable:!1,get:function(){return this._.template||{}}}),Object.defineProperty(this,"location",{configurable:!1,get:function(){var t=Utils._ensureSlash(!0,window.location.pathname,!0),e=Utils._ensureSlash(!0,docma.app.base,!0),o=t;return t.slice(0,e.length)===e&&(o=t.slice(e.length-1,t.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:Utils._ensureSlash(!0,docma.app.entrance,!1),base:e,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:t,pathname:o,path:o+(window.location.search||""),getQuery:function(t,e){"?"===(e=void 0===e?window.location.search||"":e).slice(0,1)&&(e=e.slice(1)),t=t.replace(/[[\]]/g,"\\$&");var o=new RegExp("&?"+t+"(=([^&#]*)|&|#|$)").exec(e);return o&&o[2]?decodeURIComponent(o[2].replace(/\+/g," ")):""}}}}),Object.defineProperty(this,"currentRoute",{configurable:!1,get:function(){return this._.currentRoute||null}}),Object.defineProperty(this,"documentation",{configurable:!1,get:function(){return this._.documentation||[]}}),Object.defineProperty(this,"symbols",{configurable:!1,get:function(){return this._.symbols||[]}})}DocmaWeb.prototype._trigger=function(t,e){this.info("Event:",t,e?e[0]:""),this._.emitter.trigger(t,e)},DocmaWeb.Event={Ready:"ready",Render:"render",Route:"route",Navigate:"navigate"},DocmaWeb.prototype.on=function(t,e){return this._.emitter.on.apply(this._.emitter,arguments),docma},DocmaWeb.prototype.once=function(){return this._.emitter.once.apply(this._.emitter,arguments),this},DocmaWeb.prototype.off=function(){return this._.emitter.off.apply(this._.emitter,arguments),this},DocmaWeb.prototype.addListener=DocmaWeb.prototype.on,DocmaWeb.prototype.addListenerOnce=DocmaWeb.prototype.once,DocmaWeb.prototype.removeListener=DocmaWeb.prototype.off,DocmaWeb.prototype.log=function(){docma._.logsEnabled&&console.log.apply(console,arguments)},DocmaWeb.prototype.info=function(){docma._.logsEnabled&&console.info.apply(console,arguments)},DocmaWeb.prototype.warn=function(){docma._.logsEnabled&&console.warn.apply(console,arguments)},DocmaWeb.prototype.error=function(){docma._.logsEnabled&&console.error.apply(console,arguments)},DocmaWeb.prototype.getDocmaElem=function(){var t=document.getElementById(this._.elementID);return t||(t=Utils.DOM.createChild(document.body,"div",{id:this._.elementID})),t},DocmaWeb.prototype.getContentElem=function(){var t=document.getElementById(this._.contentElementID);if(!t)throw new Error("Partial "+this._.partials.content+' should have an element with id="'+this._.contentElementID+'".');return t},DocmaWeb.prototype.loadContent=function(t){this.getContentElem().innerHTML=t,Utils.DOM._removePrevBodyStyles(),Utils.DOM._moveBodyStylesToHead(),Utils.DOM.scrollTo()},DocmaWeb.prototype._loadCompiledContent=function(t){this.getDocmaElem().innerHTML=t},DocmaWeb.prototype._fixAnchors=function(r){this.app.base&&setTimeout(function(){var t,e,o=document.querySelectorAll('a[href^="#"]');for(t=0;t<o.length;t++){var n=(e=o[t]).getAttribute("href");"#"===n.slice(0,1)&&1<n.length&&(n=window.location.pathname+(window.location.search||"")+n,e.setAttribute("href",n))}"function"==typeof r&&r()},50)},DocmaWeb.prototype.addFilter=function(t,e){if(this.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,this},DocmaWeb.prototype.removeFilter=function(t){return delete dust.filters[t],this},DocmaWeb.prototype.filterExists=function(t){return"function"==typeof dust.filters[t]},DocmaWeb.prototype.createRoute=function(t,e){return new DocmaWeb.Route(this,t,e)},DocmaWeb.prototype.createRouteFromID=function(t){if("string"!=typeof t)return this.warn("Route ID is not a string: "+t),new DocmaWeb.Route(this,null);var e=t.split(":");return new DocmaWeb.Route(this,e[1],e[0])},DocmaWeb.prototype.createRouteFromQuery=function(t){if(!t)return new DocmaWeb.Route(null);var e=t.split("&")[0].split("="),o=e[0].toLowerCase(),n=e[1];return new DocmaWeb.Route(this,n,o)},DocmaWeb.prototype._render=function(t,o){var n=this;dust.render(t,this,function(t,e){if(t)throw t;n._loadCompiledContent(e),"function"==typeof o&&o()})},DocmaWeb.prototype._triggerAfterRender=function(){this._trigger(DocmaWeb.Event.Render,[docma.currentRoute]),this._.initialLoad&&(this._trigger(DocmaWeb.Event.Ready),this._.initialLoad=!1)},DocmaWeb.prototype._render404=function(t,e){this._.currentRoute=this.createRoute(null);var o=this;this._render(this._.partials.notFound,function(){if(o._trigger(DocmaWeb.Event.Render,[null]),Utils.DOM.scrollTo(),"function"==typeof e)return e(404);throw new Error("Page or content not found for route: "+JSON.stringify(t))})},DocmaWeb.prototype.fetch=function(e,o){var n=new XMLHttpRequest,r=this;n.onreadystatechange=function(){if(4===n.readyState){var t=200===n.status?n.responseText:"";return r.log("XHR GET:",n.status,e),o(n.status,t)}},n.open("GET",e,!0),n.send()},DocmaWeb.prototype.render=function(o,n){if(!o||!o.exists())return this._render404(o,n);if(!o.isEqualTo(this.currentRoute)){this._.currentRoute=o;var r="function"==typeof n,i=this;o.type===DocmaWeb.Route.Type.API?this._render(this._.partials.api,function(){i._triggerAfterRender(),r&&n(200),i._fixAnchors(function(){Utils.DOM.scrollTo()})}):docma.fetch(o.contentPath,function(t,e){if(404===t)return i._render404(o,n);i._render(i._.partials.content,function(){i.loadContent(e),i._triggerAfterRender(),r&&n(t),i._fixAnchors()})})}},DocmaWeb.Utils=Utils;

var _arrRouteTypes;DocmaWeb.Route=function(t,e,o){if(this._docma=t,o&&!(_arrRouteTypes.indexOf(o)<0)){if(e)t.app.routing.caseSensitive||(e=e.toLowerCase());else{if(o!==DocmaWeb.Route.Type.API)return;e=t._.defaultApiName}var i=Utils._find(t.routes,{type:o,name:e});i&&Utils._assign(this,i)}},DocmaWeb.Route.Type={API:"api",CONTENT:"content"},_arrRouteTypes=Utils._values(DocmaWeb.Route.Type),DocmaWeb.Route.SourceType={JS:"js",MD:"md",HTML:"html"},DocmaWeb.Route.prototype.exists=function(){return Boolean(this.id)},DocmaWeb.Route.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},DocmaWeb.Route.prototype.isCurrent=function(){return this.isEqualTo(this._docma.currentRoute)},DocmaWeb.Route.prototype.apply=function(){return this.type===DocmaWeb.Route.Type.API?(this._docma._.documentation=this._docma.apis[this.name].documentation,this._docma._.symbols=this._docma.apis[this.name].symbols):(this._docma._.documentation=null,this._docma._.symbols=null),this._docma._trigger(DocmaWeb.Event.Route,[this.exists()?this:null]),this._docma.render(this),this},DocmaWeb.Route.prototype.toString=function(){return JSON.stringify(this)};

dust.filters=dust.filters||{},dust.filters.$pt=function(t){return DocmaWeb.Utils.parseTicks(t)},dust.filters.$pnl=function(t){return DocmaWeb.Utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return DocmaWeb.Utils.parseLinks(t)},dust.filters.$tl=function(t){return DocmaWeb.Utils.trimLeft(t)},dust.filters.$tnl=function(t){return DocmaWeb.Utils.trimNewLines(t)},dust.filters.$p=function(t){return DocmaWeb.Utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return DocmaWeb.Utils.normalizeTabs(t)},dust.filters.$desc=function(t){return DocmaWeb.Utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var reJSValues=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(t){var e=DocmaWeb.Utils.notate(t,"meta.code.value");if(void 0===e)return"";if("string"!=typeof e)return e;var n=DocmaWeb.Utils.notate(t,"type.names")||[];return!/['"`]/.test(e.slice(0,1))&&0<=n.indexOf("String")&&(1===n.length||-1===reJSValues.indexOf(e))?'"'+e+'"':e},dust.filters.$id=function(t){var e;"string"==typeof t?e=t:e=(DocmaWeb.Utils.isConstructor(t)?"new-":"")+t.$longname;return e.replace(/ /g,"-")};

DocmaWeb.version = "2.1.0";
return DocmaWeb;
})();
var docma = Object.freeze(new DocmaWeb({"version":"2.1.0","routes":[{"id":"api:","type":"api","name":"_def_","path":"/?api","contentPath":null,"sourceType":"js"},{"id":"content:readme","type":"content","name":"readme","path":"/?content=readme","contentPath":"content/readme.html","sourceType":"md"}],"apis":{"_def_":{"documentation":[{"comment":"","meta":{"range":[164,275],"filename":"bridge.js","lineno":6,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005480","name":"BridgeSignaling","type":"MethodDefinition","paramnames":["options","n2n"]},"vars":{"":null}},"undocumented":true,"name":"BridgeSignaling","longname":"BridgeSignaling","kind":"class","scope":"global","params":[],"$longname":"BridgeSignaling","$kind":"constructor","$docmaLink":"?api#BridgeSignaling"},{"comment":"/**\n   * @description Connect.Just connect, oh wait? (-_-)\n   * @param  {Object}  options options for the connection if needed\n   * @return {Promise}            Promise resolved when the connection succeeded\n   */","meta":{"range":[494,520],"filename":"bridge.js","lineno":16,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005504","name":"BridgeSignaling#connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Connect.Just connect, oh wait? (-_-)","params":[{"type":{"names":["Object"]},"description":"options for the connection if needed","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the connection succeeded"}],"name":"connect","longname":"BridgeSignaling#connect","kind":"function","memberof":"BridgeSignaling","scope":"instance","async":true,"$longname":"BridgeSignaling#connect","$kind":"method","$docmaLink":"?api#BridgeSignaling#connect"},{"comment":"/**\n   * Forward an offer to the peer that will accept the offer\n   * @param  {Object}  offer  the offer to send\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[1604,1847],"filename":"bridge.js","lineno":42,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005609","name":"BridgeSignaling#forward","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Forward an offer to the peer that will accept the offer","params":[{"type":{"names":["Object"]},"description":"the offer to send","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"forward","longname":"BridgeSignaling#forward","kind":"function","memberof":"BridgeSignaling","scope":"instance","async":true,"$longname":"BridgeSignaling#forward","$kind":"method","$docmaLink":"?api#BridgeSignaling#forward"},{"comment":"/**\n   * Forward back an accepted offer to the peer that initiate the connection\n   * @param  {Object}  offer  the offer to send\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[2063,2311],"filename":"bridge.js","lineno":52,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005659","name":"BridgeSignaling#forwardBack","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Forward back an accepted offer to the peer that initiate the connection","params":[{"type":{"names":["Object"]},"description":"the offer to send","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"forwardBack","longname":"BridgeSignaling#forwardBack","kind":"function","memberof":"BridgeSignaling","scope":"instance","async":true,"$longname":"BridgeSignaling#forwardBack","$kind":"method","$docmaLink":"?api#BridgeSignaling#forwardBack"},{"comment":"/**\n   * Send back an accepted offer to the forwarding peer\n   * @param  {Object}  offer  the offer to send\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[1137,1404],"filename":"bridge.js","lineno":32,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005559","name":"BridgeSignaling#sendOfferBack","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send back an accepted offer to the forwarding peer","params":[{"type":{"names":["Object"]},"description":"the offer to send","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"sendOfferBack","longname":"BridgeSignaling#sendOfferBack","kind":"function","memberof":"BridgeSignaling","scope":"instance","async":true,"$longname":"BridgeSignaling#sendOfferBack","$kind":"method","$docmaLink":"?api#BridgeSignaling#sendOfferBack"},{"comment":"/**\n   * Send an offer to the forwarding peer\n   * @param  {Object}  offer  the offer to send\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[701,942],"filename":"bridge.js","lineno":22,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005509","name":"BridgeSignaling#sendOfferTo","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send an offer to the forwarding peer","params":[{"type":{"names":["Object"]},"description":"the offer to send","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"sendOfferTo","longname":"BridgeSignaling#sendOfferTo","kind":"function","memberof":"BridgeSignaling","scope":"instance","async":true,"$longname":"BridgeSignaling#sendOfferTo","$kind":"method","$docmaLink":"?api#BridgeSignaling#sendOfferTo"},{"comment":"","meta":{"range":[164,275],"filename":"direct.js","lineno":6,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005741","name":"DirectSignaling","type":"MethodDefinition","paramnames":["options","n2n"]},"vars":{"":null}},"undocumented":true,"name":"DirectSignaling","longname":"DirectSignaling","kind":"class","scope":"global","params":[],"$longname":"DirectSignaling","$kind":"constructor","$docmaLink":"?api#DirectSignaling"},{"comment":"/**\n   * @description Connect.Just connect, oh wait? (-_-)\n   * @param  {Object}  options options for the connection if needed\n   * @return {Promise}            Promise resolved when the connection succeeded\n   */","meta":{"range":[494,520],"filename":"direct.js","lineno":16,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005765","name":"DirectSignaling#connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Connect.Just connect, oh wait? (-_-)","params":[{"type":{"names":["Object"]},"description":"options for the connection if needed","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the connection succeeded"}],"name":"connect","longname":"DirectSignaling#connect","kind":"function","memberof":"DirectSignaling","scope":"instance","async":true,"$longname":"DirectSignaling#connect","$kind":"method","$docmaLink":"?api#DirectSignaling#connect"},{"comment":"/**\n   * Send back an accepted offer to the forwarding peer\n   * @param  {Object}  offer  the offer to send\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[1367,1720],"filename":"direct.js","lineno":36,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005843","name":"DirectSignaling#sendOfferBack","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send back an accepted offer to the forwarding peer","params":[{"type":{"names":["Object"]},"description":"the offer to send","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"sendOfferBack","longname":"DirectSignaling#sendOfferBack","kind":"function","memberof":"DirectSignaling","scope":"instance","async":true,"$longname":"DirectSignaling#sendOfferBack","$kind":"method","$docmaLink":"?api#DirectSignaling#sendOfferBack"},{"comment":"/**\n   * Send an offer to the forwarding peer\n   * @param  {Object}  offer  the offer to send\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[701,1172],"filename":"direct.js","lineno":22,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100005770","name":"DirectSignaling#sendOfferTo","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send an offer to the forwarding peer","params":[{"type":{"names":["Object"]},"description":"the offer to send","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"sendOfferTo","longname":"DirectSignaling#sendOfferTo","kind":"function","memberof":"DirectSignaling","scope":"instance","async":true,"$longname":"DirectSignaling#sendOfferTo","$kind":"method","$docmaLink":"?api#DirectSignaling#sendOfferTo"},{"comment":"","meta":{"range":[322,536],"filename":"webrtc-moc.js","lineno":16,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/sockets","code":{"id":"astnode100007743","name":"Manager","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"Manager","longname":"Manager","kind":"class","scope":"global","params":[],"$longname":"Manager","$kind":"constructor","$docmaLink":"?api#Manager"},{"comment":"","meta":{"range":[1698,2385],"filename":"webrtc-moc.js","lineno":70,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/sockets","code":{"id":"astnode100008000","name":"module.exports","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"exports","longname":"module.exports#module.exports","kind":"class","memberof":"module.exports#module","scope":"static","params":[],"$longname":"module.exports#module.exports","$kind":"constructor","$docmaLink":"?api#module.exports#module.exports"},{"comment":"","meta":{"range":[402,6538],"filename":"main.js","lineno":12,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100000750","name":"N2N","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"N2N","longname":"N2N","kind":"class","scope":"global","params":[],"$longname":"N2N","$kind":"constructor","$docmaLink":"?api#N2N"},{"comment":"/**\n   * Perform a bridge without locking any connection, this is your responsability to lock connections correctly.\n   * @param  {String}  from peer id (initiator)\n   * @param  {String}  dest   peer id (destination)\n   * @return {Promise}\n   */","meta":{"range":[13348,13999],"filename":"main.js","lineno":309,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002060","name":"N2N#bridge","type":"MethodDefinition","paramnames":["from","dest","timeout"]},"vars":{"":null}},"description":"Perform a bridge without locking any connection, this is your responsability to lock connections correctly.","params":[{"type":{"names":["String"]},"description":"peer id (initiator)","name":"from"},{"type":{"names":["String"]},"description":"peer id (destination)","name":"dest"}],"returns":[{"type":{"names":["Promise"]}}],"name":"bridge","longname":"N2N#bridge","kind":"function","memberof":"N2N","scope":"instance","async":true,"$longname":"N2N#bridge","$kind":"method","$docmaLink":"?api#N2N#bridge"},{"comment":"/**\n   * Connect to a peer using a signaling service. If the first parameter is a N2N instance\n   * it connects directly us to the instance using an offline signaling service.\n   * Otherwise it uses a signaling services provided by Neighborhood.\n   * @param  {N2N}  n2n       N2N instance you want to connect with.\n   * @param  {Signaling}  signaling You can provide your own signaling service (dont forget to add a listener to listen for incoming messages, (see our online/offline signaling to create your own.))\n   * @return {Promise}  Resolved when the connection is successfully done, rejected otherwise.\n   */","meta":{"range":[7159,7334],"filename":"main.js","lineno":158,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100001507","name":"N2N#connect","type":"MethodDefinition","paramnames":["n2n","signaling"]},"vars":{"":null}},"description":"Connect to a peer using a signaling service. If the first parameter is a N2N instance\nit connects directly us to the instance using an offline signaling service.\nOtherwise it uses a signaling services provided by Neighborhood.","params":[{"type":{"names":["N2N"]},"description":"N2N instance you want to connect with.","name":"n2n"},{"type":{"names":["Signaling"]},"description":"You can provide your own signaling service (dont forget to add a listener to listen for incoming messages, (see our online/offline signaling to create your own.))","name":"signaling"}],"returns":[{"type":{"names":["Promise"]},"description":"Resolved when the connection is successfully done, rejected otherwise."}],"name":"connect","longname":"N2N#connect","kind":"function","memberof":"N2N","scope":"instance","async":true,"$longname":"N2N#connect","$kind":"method","$docmaLink":"?api#N2N#connect"},{"comment":"/**\n   * Perform connections using existing connection or create new one using a bridge connection.\n   * null means us\n   * 'from' is null and 'to' is null: error\n   * 'from' is null and 'to' is string: add an outview occurence (an arc)\n   * 'to' is null and 'from' is string: add an outview from 'from'\n   * 'from' is string and 'to' is string: bridge, add an arc (or create the connection) between 'from' and 'to' exchanging offers through us (not using a signaling server)\n   * @param  {String|null}  [from=null] peer id\n   * @param  {String|null}  [to=null]   peer id\n   * @return {Promise} resolved if the promise of chosen case is resolved, otherwise reject with the appropriate method\n   */","meta":{"range":[8038,8884],"filename":"main.js","lineno":177,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100001537","name":"N2N#connect4u","type":"MethodDefinition","paramnames":["from","to"]},"vars":{"":null}},"description":"Perform connections using existing connection or create new one using a bridge connection.\nnull means us\n'from' is null and 'to' is null: error\n'from' is null and 'to' is string: add an outview occurence (an arc)\n'to' is null and 'from' is string: add an outview from 'from'\n'from' is string and 'to' is string: bridge, add an arc (or create the connection) between 'from' and 'to' exchanging offers through us (not using a signaling server)","params":[{"type":{"names":["String","null"]},"optional":true,"defaultvalue":null,"description":"peer id","name":"from"},{"type":{"names":["String","null"]},"optional":true,"defaultvalue":null,"description":"peer id","name":"to"}],"returns":[{"type":{"names":["Promise"]},"description":"resolved if the promise of chosen case is resolved, otherwise reject with the appropriate method"}],"name":"connect4u","longname":"N2N#connect4u","kind":"function","memberof":"N2N","scope":"instance","async":true,"$longname":"N2N#connect4u","$kind":"method","$docmaLink":"?api#N2N#connect4u"},{"comment":"/**\n   * Add outview connection to the peer specified by peerId (use an existing connection for that.)\n   * @param  {String}  peerId peer id to connect with\n   * @return {Promise} Resolve when successfully established. Rject otherwise\n   */","meta":{"range":[9131,9348],"filename":"main.js","lineno":205,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100001686","name":"N2N#connectFromUs","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Add outview connection to the peer specified by peerId (use an existing connection for that.)","params":[{"type":{"names":["String"]},"description":"peer id to connect with","name":"peerId"}],"returns":[{"type":{"names":["Promise"]},"description":"Resolve when successfully established. Rject otherwise"}],"name":"connectFromUs","longname":"N2N#connectFromUs","kind":"function","memberof":"N2N","scope":"instance","async":true,"$longname":"N2N#connectFromUs","$kind":"method","$docmaLink":"?api#N2N#connectFromUs"},{"comment":"/**\n   * Ask to the peer identified by peerId to establish a connection with us. It add an arc from its outview to our inview.\n   * To not lock the connection forever the function will timeout after the timeout specified in the function (also in options)\n   * So if the connection timed out and the connection is well established.\n   * Good to luck to find a way to solve your problem. (set a bigger timeout (-_-))\n   * @param  {String}  peerId id of the peer that will establish the connection\n   * @return {Promise} Resolve when the connection is successfully established. Reject otherwise, error or timeout, or peer not found.\n   */","meta":{"range":[9990,11259],"filename":"main.js","lineno":221,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100001700","name":"N2N#connectToUs","type":"MethodDefinition","paramnames":["peerId","timeout"]},"vars":{"":null}},"description":"Ask to the peer identified by peerId to establish a connection with us. It add an arc from its outview to our inview.\nTo not lock the connection forever the function will timeout after the timeout specified in the function (also in options)\nSo if the connection timed out and the connection is well established.\nGood to luck to find a way to solve your problem. (set a bigger timeout (-_-))","params":[{"type":{"names":["String"]},"description":"id of the peer that will establish the connection","name":"peerId"}],"returns":[{"type":{"names":["Promise"]},"description":"Resolve when the connection is successfully established. Reject otherwise, error or timeout, or peer not found."}],"name":"connectToUs","longname":"N2N#connectToUs","kind":"function","memberof":"N2N","scope":"instance","async":true,"$longname":"N2N#connectToUs","$kind":"method","$docmaLink":"?api#N2N#connectToUs"},{"comment":"/**\n   * @description Disconnect all or one arc.\n   * @param  {String}  userId [description]\n   * @return {Promise}        [description]\n   */","meta":{"range":[16507,16572],"filename":"main.js","lineno":414,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002574","name":"N2N#disconnect","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Disconnect all or one arc.","params":[{"type":{"names":["String"]},"description":"[description]","name":"userId"}],"returns":[{"type":{"names":["Promise"]},"description":"[description]"}],"name":"disconnect","longname":"N2N#disconnect","kind":"function","memberof":"N2N","scope":"instance","$longname":"N2N#disconnect","$kind":"method","$docmaLink":"?api#N2N#disconnect"},{"comment":"/**\n   * @description Return a list of arcs inview/outview for the peer in an array of object {source: <string>, dest: <string>, outview: <boolean>}\n   * @return {Array<Object>} [{source: <string>, dest: <string>, outview: <boolean>}, ...]\n   */","meta":{"range":[18372,18419],"filename":"main.js","lineno":459,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002639","name":"N2N#getArcs","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Return a list of arcs inview/outview for the peer in an array of object {source: <string>, dest: <string>, outview: <boolean>}","returns":[{"type":{"names":["Array.<Object>"]},"description":"[{source: <string>, dest: <string>, outview: <boolean>}, ...]"}],"name":"getArcs","longname":"N2N#getArcs","kind":"function","memberof":"N2N","scope":"instance","params":[],"$longname":"N2N#getArcs","$kind":"method","$docmaLink":"?api#N2N#getArcs"},{"comment":"/**\n   * @description Get all reachable neighbours including socket, occurences, lock and ids\n   * If the connection is totally locked you cant see it. Pass true as options if you want all neighbours even if connections are locked.\n   * @param {Boolean} [all=false] if true, return all neighbours even if they are locked\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[17768,17841],"filename":"main.js","lineno":442,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002609","name":"N2N#getNeighbours","type":"MethodDefinition","paramnames":["all"]},"vars":{"":null}},"description":"Get all reachable neighbours including socket, occurences, lock and ids\nIf the connection is totally locked you cant see it. Pass true as options if you want all neighbours even if connections are locked.","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, return all neighbours even if they are locked","name":"all"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getNeighbours","longname":"N2N#getNeighbours","kind":"function","memberof":"N2N","scope":"instance","$longname":"N2N#getNeighbours","$kind":"method","$docmaLink":"?api#N2N#getNeighbours"},{"comment":"/**\n   * @description Return all ids of reachable peers (outview)\n   * @param {Boolean} [all=false] if true, return all neighbours ids even if they are locked\n   * @return {Array<String>}\n   */","meta":{"range":[18041,18120],"filename":"main.js","lineno":451,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002624","name":"N2N#getNeighboursIds","type":"MethodDefinition","paramnames":["all"]},"vars":{"":null}},"description":"Return all ids of reachable peers (outview)","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, return all neighbours ids even if they are locked","name":"all"}],"returns":[{"type":{"names":["Array.<String>"]}}],"name":"getNeighboursIds","longname":"N2N#getNeighboursIds","kind":"function","memberof":"N2N","scope":"instance","$longname":"N2N#getNeighboursIds","$kind":"method","$docmaLink":"?api#N2N#getNeighboursIds"},{"comment":"/**\n   * @description Get the list of all inviews sockets including occurences and the peer id connected with.\n   * (Warning) occurences and lock are inconsistent because you have no control on your inview\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[16876,16947],"filename":"main.js","lineno":423,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002587","name":"N2N#getNeighboursInview","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get the list of all inviews sockets including occurences and the peer id connected with.\n(Warning) occurences and lock are inconsistent because you have no control on your inview","returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getNeighboursInview","longname":"N2N#getNeighboursInview","kind":"function","memberof":"N2N","scope":"instance","params":[],"$longname":"N2N#getNeighboursInview","$kind":"method","$docmaLink":"?api#N2N#getNeighboursInview"},{"comment":"/**\n   * @description Get the list of all outviews sockets including occurences and lock and the peer id connected with.\n   * Contrary to your inview, Occurences and lock are consistent because you have the control on your outview\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[17276,17349],"filename":"main.js","lineno":432,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002598","name":"N2N#getNeighboursOutview","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get the list of all outviews sockets including occurences and lock and the peer id connected with.\nContrary to your inview, Occurences and lock are consistent because you have the control on your outview","returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getNeighboursOutview","longname":"N2N#getNeighboursOutview","kind":"function","memberof":"N2N","scope":"instance","params":[],"$longname":"N2N#getNeighboursOutview","$kind":"method","$docmaLink":"?api#N2N#getNeighboursOutview"},{"comment":"/**\n   * @description Send a message to the peer specified.\n   * Firstly we try to send in the outview, then we try to send the message in the inview.\n   * Then we throw an error if the peer is not found in the outview nor the inview.\n   * @param  {String}  [protocol= 'receive'] Protocol (event) used to send the message, on receive the message will be emitted on this event\n   * @param  {String}  peerId  peer id we want to send the message to\n   * @param  {Object}  message Message to send\n   * @return {Promise} Promise resolved when the message is sent, reject if the peer is not found or an error is return from the send method of the socket used.\n   */","meta":{"range":[19085,19182],"filename":"main.js","lineno":472,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib","code":{"id":"astnode100002650","name":"N2N#send","type":"MethodDefinition","paramnames":["protocol","id","msg"]},"vars":{"":null}},"description":"Send a message to the peer specified.\nFirstly we try to send in the outview, then we try to send the message in the inview.\nThen we throw an error if the peer is not found in the outview nor the inview.","params":[{"type":{"names":["String"]},"optional":true,"defaultvalue":"'receive'","description":"Protocol (event) used to send the message, on receive the message will be emitted on this event","name":"protocol"},{"type":{"names":["String"]},"description":"peer id we want to send the message to","name":"peerId"},{"type":{"names":["Object"]},"description":"Message to send","name":"message"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the message is sent, reject if the peer is not found or an error is return from the send method of the socket used."}],"name":"send","longname":"N2N#send","kind":"function","memberof":"N2N","scope":"instance","async":true,"$longname":"N2N#send","$kind":"method","$docmaLink":"?api#N2N#send"},{"comment":"/**\n * @class\n * @classdesc Neighborhood class, it contains a list of sockets. These sockets are direct neighbors of this class.\n * it allows offline connection and online connections\n * @extends Neighborhood\n */","meta":{"range":[539,24306],"filename":"neighborhood.js","lineno":16,"columnno":0,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100003028","name":"Neighborhood","type":"ClassDeclaration","paramnames":["options"]}},"kind":"class","classdesc":"Neighborhood class, it contains a list of sockets. These sockets are direct neighbors of this class.\nit allows offline connection and online connections","augments":["Neighborhood"],"name":"Neighborhood","longname":"Neighborhood","scope":"global","params":[],"$longname":"Neighborhood","$kind":"class","$docmaLink":"?api#Neighborhood","$members":[{"comment":"/**\n   * @description Callback called when we receive a message from a socket\n   * @param  {String} id   id of the peer\n   * @param  {Object} data data received\n   * @return {void}\n   */","meta":{"range":[21163,21361],"filename":"neighborhood.js","lineno":565,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005064","name":"Neighborhood#__receive","type":"MethodDefinition","paramnames":["id","data"]},"vars":{"":null}},"description":"Callback called when we receive a message from a socket","params":[{"type":{"names":["String"]},"description":"id of the peer","name":"id"},{"type":{"names":["Object"]},"description":"data received","name":"data"}],"returns":[{"type":{"names":["void"]}}],"name":"__receive","longname":"Neighborhood#__receive","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#__receive","$longname":"Neighborhood#__receive","$kind":"method","$docmaLink":"?api#Neighborhood#__receive"},{"comment":"/**\n   * @description Deserialize data when received\n   * @param  {string} data data received\n   * @return {Object} Data parsed\n   */","meta":{"range":[20046,20099],"filename":"neighborhood.js","lineno":528,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004999","name":"Neighborhood#_deserialize","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"Deserialize data when received","params":[{"type":{"names":["string"]},"description":"data received","name":"data"}],"returns":[{"type":{"names":["Object"]},"description":"Data parsed"}],"name":"_deserialize","longname":"Neighborhood#_deserialize","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#_deserialize","$longname":"Neighborhood#_deserialize","$kind":"method","$docmaLink":"?api#Neighborhood#_deserialize"},{"comment":"/**\n   * @description On connection closed, signal if its an inview or an outview arc. Remove the socket from its (in/out)view.\n   * @param  {String}  peerId          id of the peer\n   * @param  {Boolean} [outview=false] is in the outview or not\n   * @return {void}\n   */","meta":{"range":[19067,19696],"filename":"neighborhood.js","lineno":497,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004873","name":"Neighborhood#_manageClose","type":"MethodDefinition","paramnames":["peerId","outview"]},"vars":{"":null}},"description":"On connection closed, signal if its an inview or an outview arc. Remove the socket from its (in/out)view.","params":[{"type":{"names":["String"]},"description":"id of the peer","name":"peerId"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"is in the outview or not","name":"outview"}],"returns":[{"type":{"names":["void"]}}],"name":"_manageClose","longname":"Neighborhood#_manageClose","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#_manageClose","$longname":"Neighborhood#_manageClose","$kind":"method","$docmaLink":"?api#Neighborhood#_manageClose"},{"comment":"/**\n   * @description On error received, disconnect the (in/out)view socket. Reject with the error provided if the reject parameter is passed.\n   * @param  {Error}  error           The error received\n   * @param  {String}  peerId          Id of the peer that is errored\n   * @param  {Boolean} [outview=false] (In/out)view\n   * @param  {function}  reject          callback reject (used in the connection function)\n   * @return {void}\n   */","meta":{"range":[18170,18789],"filename":"neighborhood.js","lineno":476,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004780","name":"Neighborhood#_manageError","type":"MethodDefinition","paramnames":["error","peerId","outview","reject"]},"vars":{"":null}},"description":"On error received, disconnect the (in/out)view socket. Reject with the error provided if the reject parameter is passed.","params":[{"type":{"names":["Error"]},"description":"The error received","name":"error"},{"type":{"names":["String"]},"description":"Id of the peer that is errored","name":"peerId"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"(In/out)view","name":"outview"},{"type":{"names":["function"]},"description":"callback reject (used in the connection function)","name":"reject"}],"returns":[{"type":{"names":["void"]}}],"name":"_manageError","longname":"Neighborhood#_manageError","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#_manageError","$longname":"Neighborhood#_manageError","$kind":"method","$docmaLink":"?api#Neighborhood#_manageError"},{"comment":"/**\n   * @description Serialize the data before sending it\n   * @param  {Object} data data not serialized\n   * @return {Object} Serialized data\n   */","meta":{"range":[19852,19907],"filename":"neighborhood.js","lineno":520,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004988","name":"Neighborhood#_serialize","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"Serialize the data before sending it","params":[{"type":{"names":["Object"]},"description":"data not serialized","name":"data"}],"returns":[{"type":{"names":["Object"]},"description":"Serialized data"}],"name":"_serialize","longname":"Neighborhood#_serialize","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#_serialize","$longname":"Neighborhood#_serialize","$kind":"method","$docmaLink":"?api#Neighborhood#_serialize"},{"comment":"/**\n   * @description Signal when an arc is opened, if its an inview arc, increase the occurence\n   * Do not increment the occurence in the outview if it is an outview arc because it is manually controlled during the connection\n   * @param  {string} id Id of the peer of the arc\n   * @param  {Boolean} outview Is an inview or an outview arc\n   * @return {void}\n   */","meta":{"range":[20471,20617],"filename":"neighborhood.js","lineno":538,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005010","name":"Neighborhood#_signalConnect","type":"MethodDefinition","paramnames":["id","outview"]},"vars":{"":null}},"description":"Signal when an arc is opened, if its an inview arc, increase the occurence\nDo not increment the occurence in the outview if it is an outview arc because it is manually controlled during the connection","params":[{"type":{"names":["string"]},"description":"Id of the peer of the arc","name":"id"},{"type":{"names":["Boolean"]},"description":"Is an inview or an outview arc","name":"outview","defaultvalue":false}],"returns":[{"type":{"names":["void"]}}],"name":"_signalConnect","longname":"Neighborhood#_signalConnect","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#_signalConnect","$longname":"Neighborhood#_signalConnect","$kind":"method","$docmaLink":"?api#Neighborhood#_signalConnect"},{"comment":"/**\n   * @description Signal when an arc is closed\n   * @param  {string} id Id of the peer of the arc\n   * @param  {Boolean} outview Is an inview or an outview arc\n   * @return {void}\n   */","meta":{"range":[20812,20970],"filename":"neighborhood.js","lineno":551,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005038","name":"Neighborhood#_signalDisconnect","type":"MethodDefinition","paramnames":["id","outview"]},"vars":{"":null}},"description":"Signal when an arc is closed","params":[{"type":{"names":["string"]},"description":"Id of the peer of the arc","name":"id"},{"type":{"names":["Boolean"]},"description":"Is an inview or an outview arc","name":"outview"}],"returns":[{"type":{"names":["void"]}}],"name":"_signalDisconnect","longname":"Neighborhood#_signalDisconnect","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#_signalDisconnect","$longname":"Neighborhood#_signalDisconnect","$kind":"method","$docmaLink":"?api#Neighborhood#_signalDisconnect"},{"comment":"/**\n   * Connect us to a neighbor using a signaling service, if neighbor is null we use an online signaling service to connect the neighbor to an already existing network. If we are alone, meaning that the peer id we receive using the signaling service is null, we are automatically connected. If the neighbor is an instance of Neighborhood, we directly connect them through an offline signaling service.\n   * @param  {Neighborhood}  neighbor                          Neighborhood instance we want to connect to directly\n   * @param  {Signaling}  [signaling=this.signaling.online] The online service we want to use. Dont forget to active the listener to receive incoming messages\n   * @return {Promise} This method is resolved when the connection is successfully done, otherwise rejected\n   */","meta":{"range":[6098,9621],"filename":"neighborhood.js","lineno":130,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100003640","name":"Neighborhood#connect","type":"MethodDefinition","paramnames":["neighbor","signaling"]},"vars":{"":null}},"description":"Connect us to a neighbor using a signaling service, if neighbor is null we use an online signaling service to connect the neighbor to an already existing network. If we are alone, meaning that the peer id we receive using the signaling service is null, we are automatically connected. If the neighbor is an instance of Neighborhood, we directly connect them through an offline signaling service.","params":[{"type":{"names":["Neighborhood"]},"description":"Neighborhood instance we want to connect to directly","name":"neighbor"},{"type":{"names":["Signaling"]},"optional":true,"defaultvalue":"this.signaling.online","description":"The online service we want to use. Dont forget to active the listener to receive incoming messages","name":"signaling"}],"returns":[{"type":{"names":["Promise"]},"description":"This method is resolved when the connection is successfully done, otherwise rejected"}],"name":"connect","longname":"Neighborhood#connect","kind":"function","memberof":"Neighborhood","scope":"instance","async":true,"overrides":"Neighborhood#connect","$longname":"Neighborhood#connect","$kind":"method","$docmaLink":"?api#Neighborhood#connect"},{"comment":"/**\n   * Simulate a crash by disconnecting all sockets from inview/outview\n   * @return {void}\n   */","meta":{"range":[16379,16538],"filename":"neighborhood.js","lineno":419,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004606","name":"Neighborhood#crash","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Simulate a crash by disconnecting all sockets from inview/outview","returns":[{"type":{"names":["void"]}}],"name":"crash","longname":"Neighborhood#crash","kind":"function","memberof":"Neighborhood","scope":"instance","params":[],"overrides":"Neighborhood#crash","$longname":"Neighborhood#crash","$kind":"method","$docmaLink":"?api#Neighborhood#crash"},{"comment":"/**\n   * @description Create a new Socket and initialize callbacks (message/error/close)\n   * @param  {Object}  options         options to pass to the newly created socket.\n   * @param  {String}  id              id of our new neighbor\n   * @param  {Boolean} [outview=false] if it is an inview or outview sockt\n   * @return {Socket}\n   */","meta":{"range":[16882,17725],"filename":"neighborhood.js","lineno":435,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004644","name":"Neighborhood#createNewSocket","type":"MethodDefinition","paramnames":["options","id","outview"]},"vars":{"":null}},"description":"Create a new Socket and initialize callbacks (message/error/close)","params":[{"type":{"names":["Object"]},"description":"options to pass to the newly created socket.","name":"options"},{"type":{"names":["String"]},"description":"id of our new neighbor","name":"id"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if it is an inview or outview sockt","name":"outview"}],"returns":[{"type":{"names":["Socket"]}}],"name":"createNewSocket","longname":"Neighborhood#createNewSocket","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#createNewSocket","$longname":"Neighborhood#createNewSocket","$kind":"method","$docmaLink":"?api#Neighborhood#createNewSocket"},{"comment":"/**\n   * @description Decrease the local outview of the conenction specified by the peer id\n   * Also send a message to the remote peer to decrease its according inview for the socket connected with.\n   * @param  {String}  peerId peer id of the connection we want to decrease the occurence\n   * @return {Promise} Promise resolved when the dec is done or the real disconnection of the physical link\n   */","meta":{"range":[13038,13866],"filename":"neighborhood.js","lineno":324,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004253","name":"Neighborhood#decreaseOccOutview","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Decrease the local outview of the conenction specified by the peer id\nAlso send a message to the remote peer to decrease its according inview for the socket connected with.","params":[{"type":{"names":["String"]},"description":"peer id of the connection we want to decrease the occurence","name":"peerId"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the dec is done or the real disconnection of the physical link"}],"name":"decreaseOccOutview","longname":"Neighborhood#decreaseOccOutview","kind":"function","memberof":"Neighborhood","scope":"instance","async":true,"overrides":"Neighborhood#decreaseOccOutview","$longname":"Neighborhood#decreaseOccOutview","$kind":"method","$docmaLink":"?api#Neighborhood#decreaseOccOutview"},{"comment":"/**\n   * @description Disconnect all or one arc.\n   * @param  {String}  userId [description]\n   * @return {Promise}        [description]\n   */","meta":{"range":[15018,16272],"filename":"neighborhood.js","lineno":374,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004431","name":"Neighborhood#disconnect","type":"MethodDefinition","paramnames":["userId"]},"vars":{"":null}},"description":"Disconnect all or one arc.","params":[{"type":{"names":["String"]},"description":"[description]","name":"userId"}],"returns":[{"type":{"names":["Promise"]},"description":"[description]"}],"name":"disconnect","longname":"Neighborhood#disconnect","kind":"function","memberof":"Neighborhood","scope":"instance","async":true,"overrides":"Neighborhood#disconnect","$longname":"Neighborhood#disconnect","$kind":"method","$docmaLink":"?api#Neighborhood#disconnect"},{"comment":"/**\n   * @description Get all reachable neighbours including socket, occurences, lock and ids\n   * Even if the connection is totally locked you can see it\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[22097,22309],"filename":"neighborhood.js","lineno":592,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005119","name":"Neighborhood#getAllNeighbours","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get all reachable neighbours including socket, occurences, lock and ids\nEven if the connection is totally locked you can see it","returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getAllNeighbours","longname":"Neighborhood#getAllNeighbours","kind":"function","memberof":"Neighborhood","scope":"instance","params":[],"overrides":"Neighborhood#getAllNeighbours","$longname":"Neighborhood#getAllNeighbours","$kind":"method","$docmaLink":"?api#Neighborhood#getAllNeighbours"},{"comment":"/**\n   * @description Return a list of arcs inview/outview for the peer in an array of object {source: <string>, dest: <string>, outview: <boolean>} even if they are lock or not\n   * @return {ObjectArray<Object>} [{source: <string>, dest: <string>, outview: <boolean>}, ...]\n   */","meta":{"range":[23840,24304],"filename":"neighborhood.js","lineno":644,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005250","name":"Neighborhood#getArcs","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Return a list of arcs inview/outview for the peer in an array of object {source: <string>, dest: <string>, outview: <boolean>} even if they are lock or not","returns":[{"type":{"names":["ObjectArray.<Object>"]},"description":"[{source: <string>, dest: <string>, outview: <boolean>}, ...]"}],"name":"getArcs","longname":"Neighborhood#getArcs","kind":"function","memberof":"Neighborhood","scope":"instance","params":[],"overrides":"Neighborhood#getArcs","$longname":"Neighborhood#getArcs","$kind":"method","$docmaLink":"?api#Neighborhood#getArcs"},{"comment":"/**\n   * @description Get all reachable neighbours including socket, occurences, lock and ids\n   * If the connection is totally locked you cant see it.\n   * @param {Boolean} [all=false] if true, return all neighbours even if they are locked\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[21700,21845],"filename":"neighborhood.js","lineno":580,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005098","name":"Neighborhood#getNeighbours","type":"MethodDefinition","paramnames":["all"]},"vars":{"":null}},"description":"Get all reachable neighbours including socket, occurences, lock and ids\nIf the connection is totally locked you cant see it.","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, return all neighbours even if they are locked","name":"all"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getNeighbours","longname":"Neighborhood#getNeighbours","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#getNeighbours","$longname":"Neighborhood#getNeighbours","$kind":"method","$docmaLink":"?api#Neighborhood#getNeighbours"},{"comment":"/**\n   * @description Return all ids of reachable peers (outview)\n   * @param {Boolean} [all=false] if true, return all neighbours even if they are locked\n   * @return {Array<String>}\n   */","meta":{"range":[22505,22591],"filename":"neighborhood.js","lineno":610,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005157","name":"Neighborhood#getNeighboursIds","type":"MethodDefinition","paramnames":["all"]},"vars":{"":null}},"description":"Return all ids of reachable peers (outview)","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"if true, return all neighbours even if they are locked","name":"all"}],"returns":[{"type":{"names":["Array.<String>"]}}],"name":"getNeighboursIds","longname":"Neighborhood#getNeighboursIds","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#getNeighboursIds","$longname":"Neighborhood#getNeighboursIds","$kind":"method","$docmaLink":"?api#Neighborhood#getNeighboursIds"},{"comment":"/**\n   * @description Get the list of all inviews sockets including occurences and the peer id connected with.\n   * (Warning) occurences and lock are inconsistent because you have no control on your inview\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[23409,23553],"filename":"neighborhood.js","lineno":632,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005219","name":"Neighborhood#getNeighboursInview","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get the list of all inviews sockets including occurences and the peer id connected with.\n(Warning) occurences and lock are inconsistent because you have no control on your inview","returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getNeighboursInview","longname":"Neighborhood#getNeighboursInview","kind":"function","memberof":"Neighborhood","scope":"instance","params":[],"overrides":"Neighborhood#getNeighboursInview","$longname":"Neighborhood#getNeighboursInview","$kind":"method","$docmaLink":"?api#Neighborhood#getNeighboursInview"},{"comment":"/**\n   * @description Get the list of all outviews sockets including occurences and lock and the peer id connected with.\n   * Contrary to your inview, Occurences and lock are consistent because you have the control on your outview\n   * @return {Array<Object>} Array of object [{peer: {socket, occurences, lock}, id}]\n   */","meta":{"range":[22920,23105],"filename":"neighborhood.js","lineno":619,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100005178","name":"Neighborhood#getNeighboursOutview","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get the list of all outviews sockets including occurences and lock and the peer id connected with.\nContrary to your inview, Occurences and lock are consistent because you have the control on your outview","returns":[{"type":{"names":["Array.<Object>"]},"description":"Array of object [{peer: {socket, occurences, lock}, id}]"}],"name":"getNeighboursOutview","longname":"Neighborhood#getNeighboursOutview","kind":"function","memberof":"Neighborhood","scope":"instance","params":[],"overrides":"Neighborhood#getNeighboursOutview","$longname":"Neighborhood#getNeighboursOutview","$kind":"method","$docmaLink":"?api#Neighborhood#getNeighboursOutview"},{"comment":"/**\n   * @description Increase the occurence of the socket specified by its id in the inview\n   * @param  {String} peerId peer id\n   * @return {void}\n   */","meta":{"range":[11423,11541],"filename":"neighborhood.js","lineno":285,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004188","name":"Neighborhood#increaseOccInview","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Increase the occurence of the socket specified by its id in the inview","params":[{"type":{"names":["String"]},"description":"peer id","name":"peerId"}],"returns":[{"type":{"names":["void"]}}],"name":"increaseOccInview","longname":"Neighborhood#increaseOccInview","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#increaseOccInview","$longname":"Neighborhood#increaseOccInview","$kind":"method","$docmaLink":"?api#Neighborhood#increaseOccInview"},{"comment":"/**\n   * @description Increase the occurence of the socket specified by its id in the outview\n   * @param  {String} peerId peer id\n   * @return {void}\n   */","meta":{"range":[11703,11989],"filename":"neighborhood.js","lineno":294,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004211","name":"Neighborhood#increaseOccOutview","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Increase the occurence of the socket specified by its id in the outview","params":[{"type":{"names":["String"]},"description":"peer id","name":"peerId"}],"returns":[{"type":{"names":["void"]}}],"name":"increaseOccOutview","longname":"Neighborhood#increaseOccOutview","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#increaseOccOutview","$longname":"Neighborhood#increaseOccOutview","$kind":"method","$docmaLink":"?api#Neighborhood#increaseOccOutview"},{"comment":"/**\n   * @description Increase the occurence of the socket in the outview and send a message to the peer connected with to increase its inview\n   * @param  {String} peerId [description]\n   * @return {void}        [description]\n   */","meta":{"range":[11082,11262],"filename":"neighborhood.js","lineno":273,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004160","name":"Neighborhood#increaseOccurences","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Increase the occurence of the socket in the outview and send a message to the peer connected with to increase its inview","params":[{"type":{"names":["String"]},"description":"[description]","name":"peerId"}],"returns":[{"type":{"names":["void"]},"description":"[description]"}],"name":"increaseOccurences","longname":"Neighborhood#increaseOccurences","kind":"function","memberof":"Neighborhood","scope":"instance","async":true,"overrides":"Neighborhood#increaseOccurences","$longname":"Neighborhood#increaseOccurences","$kind":"method","$docmaLink":"?api#Neighborhood#increaseOccurences"},{"comment":"/**\n   * Lock an outview connection by incrementing the lock value of a socket\n   * @param  {String}  peerId peer id to lock\n   * @return {Boolean} False if not locked, true when locked.\n   */","meta":{"range":[9820,10225],"filename":"neighborhood.js","lineno":231,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004042","name":"Neighborhood#lock","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Lock an outview connection by incrementing the lock value of a socket","params":[{"type":{"names":["String"]},"description":"peer id to lock","name":"peerId"}],"returns":[{"type":{"names":["Boolean"]},"description":"False if not locked, true when locked."}],"name":"lock","longname":"Neighborhood#lock","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#lock","$longname":"Neighborhood#lock","$kind":"method","$docmaLink":"?api#Neighborhood#lock"},{"comment":"/**\n   * @description Send a message to the peer specified.\n   * Firstly we try to send in the outview, then we try to send the message in the inview.\n   * Then we throw an error if the peer is not found in the outview nor the inview.\n   * @param  {String}  peerId  peer id we want to send the message to\n   * @param  {Object}  message Message to send\n   * @return {Promise} Promise resolved when the message is sent, reject if the peer is not found or an error is return from the send method of the socket used.\n   */","meta":{"range":[14391,14869],"filename":"neighborhood.js","lineno":359,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004336","name":"Neighborhood#send","type":"MethodDefinition","paramnames":["peerId","message"]},"vars":{"":null}},"description":"Send a message to the peer specified.\nFirstly we try to send in the outview, then we try to send the message in the inview.\nThen we throw an error if the peer is not found in the outview nor the inview.","params":[{"type":{"names":["String"]},"description":"peer id we want to send the message to","name":"peerId"},{"type":{"names":["Object"]},"description":"Message to send","name":"message"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the message is sent, reject if the peer is not found or an error is return from the send method of the socket used."}],"name":"send","longname":"Neighborhood#send","kind":"function","memberof":"Neighborhood","scope":"instance","async":true,"overrides":"Neighborhood#send","$longname":"Neighborhood#send","$kind":"method","$docmaLink":"?api#Neighborhood#send"},{"comment":"/**\n   * Unlock an outview connection by decrementing the lock value of a socket\n   * @param  {String}  peerId peer id to unlock\n   * @return {Boolean} False if not unlocked, true when unlocked.\n   */","meta":{"range":[10432,10843],"filename":"neighborhood.js","lineno":252,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100004088","name":"Neighborhood#unlock","type":"MethodDefinition","paramnames":["peerId"]},"vars":{"":null}},"description":"Unlock an outview connection by decrementing the lock value of a socket","params":[{"type":{"names":["String"]},"description":"peer id to unlock","name":"peerId"}],"returns":[{"type":{"names":["Boolean"]},"description":"False if not unlocked, true when unlocked."}],"name":"unlock","longname":"Neighborhood#unlock","kind":"function","memberof":"Neighborhood","scope":"instance","overrides":"Neighborhood#unlock","$longname":"Neighborhood#unlock","$kind":"method","$docmaLink":"?api#Neighborhood#unlock"}],"$constructor":{"comment":"","meta":{"range":[583,5298],"filename":"neighborhood.js","lineno":17,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/neighborhood","code":{"id":"astnode100003032","name":"Neighborhood","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"Neighborhood","longname":"Neighborhood","kind":"class","scope":"global","params":[],"$longname":"Neighborhood","$kind":"constructor","$docmaLink":"?api#Neighborhood"}},{"comment":"/**\n   * @description Connect the signaling service to a Socket.io signaling server (see the server in ./server)\n   * @param  {Object}  options options for the connection if needed\n   * @return {Promise}            Promise resolved when the connection succeeded\n   */","meta":{"range":[505,1808],"filename":"online.js","lineno":13,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100006030","name":"OnlineSignaling#connect","type":"MethodDefinition","paramnames":["room","options"]},"vars":{"":null}},"description":"Connect the signaling service to a Socket.io signaling server (see the server in ./server)","params":[{"type":{"names":["Object"]},"description":"options for the connection if needed","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the connection succeeded"}],"name":"connect","longname":"OnlineSignaling#connect","kind":"function","memberof":"OnlineSignaling","scope":"instance","$longname":"OnlineSignaling#connect","$kind":"method","$docmaLink":"?api#OnlineSignaling#connect"},{"comment":"/**\n   * Get a new peer from the signaling service, can be undefined or a string representing the peer id to connect with\n   * @return {Promise}        Promise resolved with the peerId or undefined as result or reject with an error\n   */","meta":{"range":[2970,3200],"filename":"online.js","lineno":90,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100006394","name":"OnlineSignaling#getNewPeer","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get a new peer from the signaling service, can be undefined or a string representing the peer id to connect with","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved with the peerId or undefined as result or reject with an error"}],"name":"getNewPeer","longname":"OnlineSignaling#getNewPeer","kind":"function","memberof":"OnlineSignaling","scope":"instance","params":[],"$longname":"OnlineSignaling#getNewPeer","$kind":"method","$docmaLink":"?api#OnlineSignaling#getNewPeer"},{"comment":"/**\n   * Send an offer to the signaling service\n   * @param  {Object}  offer  the offer to send to the signaling server\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[3408,3474],"filename":"online.js","lineno":105,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling","code":{"id":"astnode100006436","name":"OnlineSignaling#sendOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send an offer to the signaling service","params":[{"type":{"names":["Object"]},"description":"the offer to send to the signaling server","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"sendOffer","longname":"OnlineSignaling#sendOffer","kind":"function","memberof":"OnlineSignaling","scope":"instance","async":true,"$longname":"OnlineSignaling#sendOffer","$kind":"method","$docmaLink":"?api#OnlineSignaling#sendOffer"},{"comment":"/**\n * Signaling server\n * @function Server\n * @param  {Object} [config=require('./config.json')] Configuration of the signaling server\n * @return {void}\n */","meta":{"filename":"server.js","lineno":2,"columnno":0,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling/server","code":{}},"description":"Signaling server","kind":"function","name":"Server","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"require('./config.json')","description":"Configuration of the signaling server","name":"config"}],"returns":[{"type":{"names":["void"]}}],"longname":"Server","scope":"global","$longname":"Server","$kind":"method","$docmaLink":"?api#Server","$members":[{"comment":"/**\n   * Emit an offer to the right client\n   * An offer is an object composed of 4 properties:\n   * *a type: new or back (respectively for all new offers and accepted offers)\n   * *the initiator id\n   * *the destination id\n   * *the offer (generally the webrtc offer)\n   * @event Server#offer\n   * @type {Object}\n   */","meta":{"filename":"server.js","lineno":16,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling/server","code":{}},"description":"Emit an offer to the right client\nAn offer is an object composed of 4 properties:\n*a type: new or back (respectively for all new offers and accepted offers)\n*the initiator id\n*the destination id\n*the offer (generally the webrtc offer)","kind":"event","name":"offer","type":{"names":["Object"]},"memberof":"Server","longname":"Server#event:offer","scope":"instance","$longname":"Server#event:offer","$kind":"event","$docmaLink":"?api#Server#event:offer"},{"comment":"/**\n   * Emit on the event 'getNewPeer' a random peer from the room of the asker\n   * @function getNewPeer\n   * @memberof Server\n   * @fires Server#jobId\n   * @param  {Object} self Server instance\n   * @param  {Object} socket the socket representing a client see socket.io documentation\n   * @param  {String} jobId event name on which we will emit the result of the function\n   * @return {void}\n   */","meta":{"filename":"server.js","lineno":53,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling/server","code":{}},"description":"Emit on the event 'getNewPeer' a random peer from the room of the asker","kind":"function","name":"getNewPeer","memberof":"Server","fires":["Server#event:jobId"],"params":[{"type":{"names":["Object"]},"description":"Server instance","name":"self"},{"type":{"names":["Object"]},"description":"the socket representing a client see socket.io documentation","name":"socket"},{"type":{"names":["String"]},"description":"event name on which we will emit the result of the function","name":"jobId"}],"returns":[{"type":{"names":["void"]}}],"scope":"static","longname":"Server.getNewPeer","$longname":"Server.getNewPeer","$kind":"method","$docmaLink":"?api#Server.getNewPeer"},{"comment":"/**\n   * When the signaling server receive an offer it dispatch the offer to right peer, if it is an offer of type 'new' give it to the destination, otherwise give it to the initiator\n   * @function receiveOffer\n   * @memberof Server\n   * @fires Server#offer\n   * @param  {Object} self        Server instance\n   * @param  {Object} socket      Socket instance\n   * @param  {Object} offer the offer sent by the client, need to be at least {initiator, destination, type, offer} and never change between the exchange (except for the offer.offer object and the offer.type)\n   * @param  {String} offer.initiator   The initiator id (always the id of the peer that initiated the connection)\n   * @param  {String} offer.destination The destination id (always the id of the peer that will be connected with the initiator)\n   * @param  {String} offer.type        The type of the id (new or back)\n   * @param  {Object} offer.offer       The offer sent (generally the webrtc offer)\n   * @return {void}\n   */","meta":{"filename":"server.js","lineno":26,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/signaling/server","code":{}},"description":"When the signaling server receive an offer it dispatch the offer to right peer, if it is an offer of type 'new' give it to the destination, otherwise give it to the initiator","kind":"function","name":"receiveOffer","memberof":"Server","fires":["Server#event:offer"],"params":[{"type":{"names":["Object"]},"description":"Server instance","name":"self"},{"type":{"names":["Object"]},"description":"Socket instance","name":"socket"},{"type":{"names":["Object"]},"description":"the offer sent by the client, need to be at least {initiator, destination, type, offer} and never change between the exchange (except for the offer.offer object and the offer.type)","name":"offer"},{"type":{"names":["String"]},"description":"The initiator id (always the id of the peer that initiated the connection)","name":"offer.initiator"},{"type":{"names":["String"]},"description":"The destination id (always the id of the peer that will be connected with the initiator)","name":"offer.destination"},{"type":{"names":["String"]},"description":"The type of the id (new or back)","name":"offer.type"},{"type":{"names":["Object"]},"description":"The offer sent (generally the webrtc offer)","name":"offer.offer"}],"returns":[{"type":{"names":["void"]}}],"scope":"static","longname":"Server.receiveOffer","$longname":"Server.receiveOffer","$kind":"method","$docmaLink":"?api#Server.receiveOffer"}]},{"comment":"","meta":{"range":[153,224],"filename":"signaling.js","lineno":6,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000040","name":"Signaling","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"Signaling","longname":"Signaling","kind":"class","scope":"global","params":[],"$longname":"Signaling","$kind":"constructor","$docmaLink":"?api#Signaling"},{"comment":"/**\n   * @description [**To Impelment**] Connect the signaling service\n   * @param  {Object}  options options for the connection if needed\n   * @return {Promise}            Promise resolved when the connection succeeded\n   */","meta":{"range":[456,525],"filename":"signaling.js","lineno":16,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000056","name":"Signaling#connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"[**To Impelment**] Connect the signaling service","params":[{"type":{"names":["Object"]},"description":"options for the connection if needed","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the connection succeeded"}],"name":"connect","longname":"Signaling#connect","kind":"function","memberof":"Signaling","scope":"instance","async":true,"$longname":"Signaling#connect","$kind":"method","$docmaLink":"?api#Signaling#connect"},{"comment":"/**\n   * Get a new peer from the signaling service, can be undefined or a string representing the peer id to connect with\n   * @return {Promise}        Promise resolved with the peerId or undefined as result or reject with an error\n   */","meta":{"range":[769,834],"filename":"signaling.js","lineno":24,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000070","name":"Signaling#getNewPeer","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get a new peer from the signaling service, can be undefined or a string representing the peer id to connect with","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved with the peerId or undefined as result or reject with an error"}],"name":"getNewPeer","longname":"Signaling#getNewPeer","kind":"function","memberof":"Signaling","scope":"instance","params":[],"async":true,"$longname":"Signaling#getNewPeer","$kind":"method","$docmaLink":"?api#Signaling#getNewPeer"},{"comment":"/**\n   * Method called when an offer has been received always with the format {initiator, destination, offer}\n   * @param  {Object}  offer the offer received\n   * @return {void}\n   */","meta":{"range":[1301,1380],"filename":"signaling.js","lineno":42,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000097","name":"Signaling#receiveOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Method called when an offer has been received always with the format {initiator, destination, offer}","params":[{"type":{"names":["Object"]},"description":"the offer received","name":"offer"}],"returns":[{"type":{"names":["void"]}}],"name":"receiveOffer","longname":"Signaling#receiveOffer","kind":"function","memberof":"Signaling","scope":"instance","$longname":"Signaling#receiveOffer","$kind":"method","$docmaLink":"?api#Signaling#receiveOffer"},{"comment":"/**\n   * Send an offer to the signaling service\n   * @param  {Object}  offer  the offer to send to the signaling server\n   * @return {Promise}        Promise resolved when the offer has been sent\n   */","meta":{"range":[1042,1111],"filename":"signaling.js","lineno":33,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000083","name":"Signaling#sendOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send an offer to the signaling service","params":[{"type":{"names":["Object"]},"description":"the offer to send to the signaling server","name":"offer"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the offer has been sent"}],"name":"sendOffer","longname":"Signaling#sendOffer","kind":"function","memberof":"Signaling","scope":"instance","async":true,"$longname":"Signaling#sendOffer","$kind":"method","$docmaLink":"?api#Signaling#sendOffer"},{"comment":"/**\n * @class\n * @classdesc Simple-peer wrapper implementing the Socket API\n * @extends Socket\n */","meta":{"range":[284,3600],"filename":"simple-peer.js","lineno":12,"columnno":0,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/sockets","code":{"id":"astnode100007129","name":"SimplePeerWrapper","type":"ClassDeclaration","paramnames":["options"]}},"kind":"class","classdesc":"Simple-peer wrapper implementing the Socket API","augments":["Socket"],"name":"SimplePeerWrapper","longname":"SimplePeerWrapper","scope":"global","params":[],"$longname":"SimplePeerWrapper","$kind":"class","$docmaLink":"?api#SimplePeerWrapper","$members":[{"comment":"/**\n   * @description Review the internal message buffer and return an error when an error occured\n   * Emit an error the events bus (.events) with the signal 'error_message' with the error and the message we tried to send.\n   * @return {Promise} Promise resolved messages are sent\n   */","meta":{"range":[4884,5421],"filename":"socket.js","lineno":143,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000459","name":"Socket#__reviewBuffer","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Review the internal message buffer and return an error when an error occured\nEmit an error the events bus (.events) with the signal 'error_message' with the error and the message we tried to send.","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved messages are sent"}],"name":"__reviewBuffer","longname":"SimplePeerWrapper#__reviewBuffer","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","params":[],"async":true,"inherits":"Socket#__reviewBuffer","inherited":true,"$longname":"SimplePeerWrapper#__reviewBuffer","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#__reviewBuffer"},{"comment":"/**\n   * @description [**To implement**]\n   * Connect the socket to a peer you have to provide.\n   * You have to implement this method and return a promise that resolve when the connection is completed.\n   * @param  {Object} options options passed to the function\n   * @return {Promise}         Promise resolved when the socket is connected\n   */","meta":{"range":[1937,2001],"filename":"socket.js","lineno":55,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000245","name":"Socket#_connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"[**To implement**]\nConnect the socket to a peer you have to provide.\nYou have to implement this method and return a promise that resolve when the connection is completed.","params":[{"type":{"names":["Object"]},"description":"options passed to the function","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is connected"}],"name":"_connect","longname":"SimplePeerWrapper#_connect","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","inherits":"Socket#_connect","inherited":true,"overrides":"Socket#_connect","$longname":"SimplePeerWrapper#_connect","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#_connect"},{"comment":"/**\n   * @description [**To implement**]\n   * Destroy/disconnect the socket\n   * You have to implement this method and return a promise that resolve when the socket is destroyed\n   * @return {Promise} Promise resolved when the socket is destroyed/disconnected\n   */","meta":{"range":[2987,3047],"filename":"socket.js","lineno":87,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000286","name":"Socket#_disconnect","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"[**To implement**]\nDestroy/disconnect the socket\nYou have to implement this method and return a promise that resolve when the socket is destroyed","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is destroyed/disconnected"}],"name":"_disconnect","longname":"SimplePeerWrapper#_disconnect","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","params":[],"inherits":"Socket#_disconnect","inherited":true,"overrides":"Socket#_disconnect","$longname":"SimplePeerWrapper#_disconnect","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#_disconnect"},{"comment":"/**\n   * Callback called when data are received\n   * Default bbehavior: emit data on the event bus when received with the event 'data'\n   * @param  {Object} data data received\n   * @return {void}\n   */","meta":{"range":[2662,2715],"filename":"socket.js","lineno":77,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000274","name":"Socket#_receiveData","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"Callback called when data are received\nDefault bbehavior: emit data on the event bus when received with the event 'data'","params":[{"type":{"names":["Object"]},"description":"data received","name":"data"}],"returns":[{"type":{"names":["void"]}}],"name":"_receiveData","longname":"SimplePeerWrapper#_receiveData","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","inherits":"Socket#_receiveData","inherited":true,"$longname":"SimplePeerWrapper#_receiveData","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#_receiveData"},{"comment":"/**\n   * @description To Implement: you will receive all offers here, do what you want with them, Usefull for connection if you are using simple-peer or webrtc\n   * @param  {Object} offer offer received from someone who want to connect to us\n   * @return {void}\n   */","meta":{"range":[1255,1305],"filename":"socket.js","lineno":35,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000219","name":"Socket#_receiveOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"To Implement: you will receive all offers here, do what you want with them, Usefull for connection if you are using simple-peer or webrtc","params":[{"type":{"names":["Object"]},"description":"offer received from someone who want to connect to us","name":"offer"}],"returns":[{"type":{"names":["void"]}}],"name":"_receiveOffer","longname":"SimplePeerWrapper#_receiveOffer","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","inherits":"Socket#_receiveOffer","inherited":true,"overrides":"Socket#_receiveOffer","$longname":"SimplePeerWrapper#_receiveOffer","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#_receiveOffer"},{"comment":"/**\n   * @description [**To implement**]\n   * Send a message on the socket to the peer which is connected to this socket.\n   * You have to implement this method and return a promise that resolve when the message is sent\n   * @param  {Object} data    data to send\n   * @param  {Object} options options\n   * @return {Promise}         Promise resolved when the message is sent\n   */","meta":{"range":[2387,2454],"filename":"socket.js","lineno":67,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000259","name":"Socket#_send","type":"MethodDefinition","paramnames":["data","options"]},"vars":{"":null}},"description":"[**To implement**]\nSend a message on the socket to the peer which is connected to this socket.\nYou have to implement this method and return a promise that resolve when the message is sent","params":[{"type":{"names":["Object"]},"description":"data to send","name":"data"},{"type":{"names":["Object"]},"description":"options","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the message is sent"}],"name":"_send","longname":"SimplePeerWrapper#_send","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","inherits":"Socket#_send","inherited":true,"overrides":"Socket#_send","$longname":"SimplePeerWrapper#_send","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#_send"},{"comment":"/**\n  * @description Connect the socket to a peer using the signaling service provided by the supervisor of the socket.\n  * @param  {Object} options options passed to the function\n  * @return {Promise}         Promise resolved when the socket is connected\n   */","meta":{"range":[3315,3545],"filename":"socket.js","lineno":96,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000299","name":"Socket#connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Connect the socket to a peer using the signaling service provided by the supervisor of the socket.","params":[{"type":{"names":["Object"]},"description":"options passed to the function","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is connected"}],"name":"connect","longname":"SimplePeerWrapper#connect","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","async":true,"inherits":"Socket#connect","inherited":true,"$longname":"SimplePeerWrapper#connect","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#connect"},{"comment":"/**\n   * @description Destroy/disconnect the socket\n   * @return {Promise} Promise resolved when the socket is destroyed/disconnected\n   */","meta":{"range":[4399,4590],"filename":"socket.js","lineno":130,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000422","name":"Socket#disconnect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Destroy/disconnect the socket","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is destroyed/disconnected"}],"name":"disconnect","longname":"SimplePeerWrapper#disconnect","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","params":[],"async":true,"inherits":"Socket#disconnect","inherited":true,"$longname":"SimplePeerWrapper#disconnect","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#disconnect"},{"comment":"/**\n   * Send an offer to the supervisor of the socket for sending the offer (perhaps used by a signaling service)\n   * @param  {Object} offer [description]\n   * @return {void}       [description]\n   */","meta":{"range":[1514,1584],"filename":"socket.js","lineno":44,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000229","name":"Socket#emitOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send an offer to the supervisor of the socket for sending the offer (perhaps used by a signaling service)","params":[{"type":{"names":["Object"]},"description":"[description]","name":"offer"}],"returns":[{"type":{"names":["void"]},"description":"[description]"}],"name":"emitOffer","longname":"SimplePeerWrapper#emitOffer","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","inherits":"Socket#emitOffer","inherited":true,"$longname":"SimplePeerWrapper#emitOffer","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#emitOffer"},{"comment":"/**\n   * @description Send a message on the socket to the peer which is connected to this socket.\n   * @param  {Object} data    data to send\n   * @param  {Object} options options\n   * @return {Promise}         Promise resolved when the message is sent\n   */","meta":{"range":[3809,4253],"filename":"socket.js","lineno":111,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000346","name":"Socket#send","type":"MethodDefinition","paramnames":["data","options"]},"vars":{"":null}},"description":"Send a message on the socket to the peer which is connected to this socket.","params":[{"type":{"names":["Object"]},"description":"data to send","name":"data"},{"type":{"names":["Object"]},"description":"options","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the message is sent"}],"name":"send","longname":"SimplePeerWrapper#send","kind":"function","memberof":"SimplePeerWrapper","scope":"instance","async":true,"inherits":"Socket#send","inherited":true,"$longname":"SimplePeerWrapper#send","$kind":"method","$docmaLink":"?api#SimplePeerWrapper#send"}],"$constructor":{"comment":"","meta":{"range":[327,810],"filename":"simple-peer.js","lineno":13,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/sockets","code":{"id":"astnode100007133","name":"SimplePeerWrapper","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"SimplePeerWrapper","longname":"SimplePeerWrapper","kind":"class","scope":"global","params":[],"$longname":"SimplePeerWrapper","$kind":"constructor","$docmaLink":"?api#SimplePeerWrapper"}},{"comment":"/**\n * @class\n * @classdesc This Abstract class represent a socket which can be implemented with any socket compatible with this API.\n * For example you can implement this class with a webrtc socket such as simple-peer\n * @type {class}\n */","meta":{"range":[352,5423],"filename":"socket.js","lineno":11,"columnno":0,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000139","name":"Socket","type":"ClassDeclaration","paramnames":["options"]}},"kind":"class","classdesc":"This Abstract class represent a socket which can be implemented with any socket compatible with this API.\nFor example you can implement this class with a webrtc socket such as simple-peer","type":{"names":["class"]},"name":"Socket","longname":"Socket","scope":"global","description":"Constructor of the Socket class, the connect method just initialize a socket and wait for an accepted offer","params":[{"type":{"names":["Object"]},"description":"any options needed","name":"options"}],"$longname":"Socket","$kind":"class","$docmaLink":"?api#Socket","$members":[{"comment":"/**\n   * @description Review the internal message buffer and return an error when an error occured\n   * Emit an error the events bus (.events) with the signal 'error_message' with the error and the message we tried to send.\n   * @return {Promise} Promise resolved messages are sent\n   */","meta":{"range":[4884,5421],"filename":"socket.js","lineno":143,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000459","name":"Socket#__reviewBuffer","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Review the internal message buffer and return an error when an error occured\nEmit an error the events bus (.events) with the signal 'error_message' with the error and the message we tried to send.","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved messages are sent"}],"name":"__reviewBuffer","longname":"Socket#__reviewBuffer","kind":"function","memberof":"Socket","scope":"instance","params":[],"async":true,"$longname":"Socket#__reviewBuffer","$kind":"method","$docmaLink":"?api#Socket#__reviewBuffer"},{"comment":"/**\n   * @description [**To implement**]\n   * Connect the socket to a peer you have to provide.\n   * You have to implement this method and return a promise that resolve when the connection is completed.\n   * @param  {Object} options options passed to the function\n   * @return {Promise}         Promise resolved when the socket is connected\n   */","meta":{"range":[1937,2001],"filename":"socket.js","lineno":55,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000245","name":"Socket#_connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"[**To implement**]\nConnect the socket to a peer you have to provide.\nYou have to implement this method and return a promise that resolve when the connection is completed.","params":[{"type":{"names":["Object"]},"description":"options passed to the function","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is connected"}],"name":"_connect","longname":"Socket#_connect","kind":"function","memberof":"Socket","scope":"instance","$longname":"Socket#_connect","$kind":"method","$docmaLink":"?api#Socket#_connect"},{"comment":"/**\n   * @description [**To implement**]\n   * Destroy/disconnect the socket\n   * You have to implement this method and return a promise that resolve when the socket is destroyed\n   * @return {Promise} Promise resolved when the socket is destroyed/disconnected\n   */","meta":{"range":[2987,3047],"filename":"socket.js","lineno":87,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000286","name":"Socket#_disconnect","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"[**To implement**]\nDestroy/disconnect the socket\nYou have to implement this method and return a promise that resolve when the socket is destroyed","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is destroyed/disconnected"}],"name":"_disconnect","longname":"Socket#_disconnect","kind":"function","memberof":"Socket","scope":"instance","params":[],"$longname":"Socket#_disconnect","$kind":"method","$docmaLink":"?api#Socket#_disconnect"},{"comment":"/**\n   * Callback called when data are received\n   * Default bbehavior: emit data on the event bus when received with the event 'data'\n   * @param  {Object} data data received\n   * @return {void}\n   */","meta":{"range":[2662,2715],"filename":"socket.js","lineno":77,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000274","name":"Socket#_receiveData","type":"MethodDefinition","paramnames":["data"]},"vars":{"":null}},"description":"Callback called when data are received\nDefault bbehavior: emit data on the event bus when received with the event 'data'","params":[{"type":{"names":["Object"]},"description":"data received","name":"data"}],"returns":[{"type":{"names":["void"]}}],"name":"_receiveData","longname":"Socket#_receiveData","kind":"function","memberof":"Socket","scope":"instance","$longname":"Socket#_receiveData","$kind":"method","$docmaLink":"?api#Socket#_receiveData"},{"comment":"/**\n   * @description To Implement: you will receive all offers here, do what you want with them, Usefull for connection if you are using simple-peer or webrtc\n   * @param  {Object} offer offer received from someone who want to connect to us\n   * @return {void}\n   */","meta":{"range":[1255,1305],"filename":"socket.js","lineno":35,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000219","name":"Socket#_receiveOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"To Implement: you will receive all offers here, do what you want with them, Usefull for connection if you are using simple-peer or webrtc","params":[{"type":{"names":["Object"]},"description":"offer received from someone who want to connect to us","name":"offer"}],"returns":[{"type":{"names":["void"]}}],"name":"_receiveOffer","longname":"Socket#_receiveOffer","kind":"function","memberof":"Socket","scope":"instance","$longname":"Socket#_receiveOffer","$kind":"method","$docmaLink":"?api#Socket#_receiveOffer"},{"comment":"/**\n   * @description [**To implement**]\n   * Send a message on the socket to the peer which is connected to this socket.\n   * You have to implement this method and return a promise that resolve when the message is sent\n   * @param  {Object} data    data to send\n   * @param  {Object} options options\n   * @return {Promise}         Promise resolved when the message is sent\n   */","meta":{"range":[2387,2454],"filename":"socket.js","lineno":67,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000259","name":"Socket#_send","type":"MethodDefinition","paramnames":["data","options"]},"vars":{"":null}},"description":"[**To implement**]\nSend a message on the socket to the peer which is connected to this socket.\nYou have to implement this method and return a promise that resolve when the message is sent","params":[{"type":{"names":["Object"]},"description":"data to send","name":"data"},{"type":{"names":["Object"]},"description":"options","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the message is sent"}],"name":"_send","longname":"Socket#_send","kind":"function","memberof":"Socket","scope":"instance","$longname":"Socket#_send","$kind":"method","$docmaLink":"?api#Socket#_send"},{"comment":"/**\n  * @description Connect the socket to a peer using the signaling service provided by the supervisor of the socket.\n  * @param  {Object} options options passed to the function\n  * @return {Promise}         Promise resolved when the socket is connected\n   */","meta":{"range":[3315,3545],"filename":"socket.js","lineno":96,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000299","name":"Socket#connect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Connect the socket to a peer using the signaling service provided by the supervisor of the socket.","params":[{"type":{"names":["Object"]},"description":"options passed to the function","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is connected"}],"name":"connect","longname":"Socket#connect","kind":"function","memberof":"Socket","scope":"instance","async":true,"$longname":"Socket#connect","$kind":"method","$docmaLink":"?api#Socket#connect"},{"comment":"/**\n   * @description Destroy/disconnect the socket\n   * @return {Promise} Promise resolved when the socket is destroyed/disconnected\n   */","meta":{"range":[4399,4590],"filename":"socket.js","lineno":130,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000422","name":"Socket#disconnect","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Destroy/disconnect the socket","returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the socket is destroyed/disconnected"}],"name":"disconnect","longname":"Socket#disconnect","kind":"function","memberof":"Socket","scope":"instance","params":[],"async":true,"$longname":"Socket#disconnect","$kind":"method","$docmaLink":"?api#Socket#disconnect"},{"comment":"/**\n   * Send an offer to the supervisor of the socket for sending the offer (perhaps used by a signaling service)\n   * @param  {Object} offer [description]\n   * @return {void}       [description]\n   */","meta":{"range":[1514,1584],"filename":"socket.js","lineno":44,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000229","name":"Socket#emitOffer","type":"MethodDefinition","paramnames":["offer"]},"vars":{"":null}},"description":"Send an offer to the supervisor of the socket for sending the offer (perhaps used by a signaling service)","params":[{"type":{"names":["Object"]},"description":"[description]","name":"offer"}],"returns":[{"type":{"names":["void"]},"description":"[description]"}],"name":"emitOffer","longname":"Socket#emitOffer","kind":"function","memberof":"Socket","scope":"instance","$longname":"Socket#emitOffer","$kind":"method","$docmaLink":"?api#Socket#emitOffer"},{"comment":"/**\n   * @description Send a message on the socket to the peer which is connected to this socket.\n   * @param  {Object} data    data to send\n   * @param  {Object} options options\n   * @return {Promise}         Promise resolved when the message is sent\n   */","meta":{"range":[3809,4253],"filename":"socket.js","lineno":111,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000346","name":"Socket#send","type":"MethodDefinition","paramnames":["data","options"]},"vars":{"":null}},"description":"Send a message on the socket to the peer which is connected to this socket.","params":[{"type":{"names":["Object"]},"description":"data to send","name":"data"},{"type":{"names":["Object"]},"description":"options","name":"options"}],"returns":[{"type":{"names":["Promise"]},"description":"Promise resolved when the message is sent"}],"name":"send","longname":"Socket#send","kind":"function","memberof":"Socket","scope":"instance","async":true,"$longname":"Socket#send","$kind":"method","$docmaLink":"?api#Socket#send"}],"$constructor":{"comment":"/**\n   * @description Constructor of the Socket class, the connect method just initialize a socket and wait for an accepted offer\n   * @param {Object} options   any options needed\n   */","meta":{"range":[578,981],"filename":"socket.js","lineno":16,"columnno":2,"path":"/home/travis/build/RAN3D/n2n-wrtc/lib/api","code":{"id":"astnode100000143","name":"Socket","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Constructor of the Socket class, the connect method just initialize a socket and wait for an accepted offer","params":[{"type":{"names":["Object"]},"description":"any options needed","name":"options"}],"name":"Socket","longname":"Socket","kind":"class","scope":"global","undocumented":true,"$longname":"Socket","$kind":"constructor","$docmaLink":"?api#Socket"}}],"symbols":["BridgeSignaling","BridgeSignaling#connect","BridgeSignaling#forward","BridgeSignaling#forwardBack","BridgeSignaling#sendOfferBack","BridgeSignaling#sendOfferTo","DirectSignaling","DirectSignaling#connect","DirectSignaling#sendOfferBack","DirectSignaling#sendOfferTo","Manager","module.exports#module.exports","N2N","N2N#bridge","N2N#connect","N2N#connect4u","N2N#connectFromUs","N2N#connectToUs","N2N#disconnect","N2N#getArcs","N2N#getNeighbours","N2N#getNeighboursIds","N2N#getNeighboursInview","N2N#getNeighboursOutview","N2N#send","Neighborhood","Neighborhood#__receive","Neighborhood#_deserialize","Neighborhood#_manageClose","Neighborhood#_manageError","Neighborhood#_serialize","Neighborhood#_signalConnect","Neighborhood#_signalDisconnect","Neighborhood#connect","Neighborhood#crash","Neighborhood#createNewSocket","Neighborhood#decreaseOccOutview","Neighborhood#disconnect","Neighborhood#getAllNeighbours","Neighborhood#getArcs","Neighborhood#getNeighbours","Neighborhood#getNeighboursIds","Neighborhood#getNeighboursInview","Neighborhood#getNeighboursOutview","Neighborhood#increaseOccInview","Neighborhood#increaseOccOutview","Neighborhood#increaseOccurences","Neighborhood#lock","Neighborhood#send","Neighborhood#unlock","OnlineSignaling#connect","OnlineSignaling#getNewPeer","OnlineSignaling#sendOffer","Server","Server#event:offer","Server.getNewPeer","Server.receiveOffer","Signaling","Signaling#connect","Signaling#getNewPeer","Signaling#receiveOffer","Signaling#sendOffer","SimplePeerWrapper","SimplePeerWrapper#__reviewBuffer","SimplePeerWrapper#_connect","SimplePeerWrapper#_disconnect","SimplePeerWrapper#_receiveData","SimplePeerWrapper#_receiveOffer","SimplePeerWrapper#_send","SimplePeerWrapper#connect","SimplePeerWrapper#disconnect","SimplePeerWrapper#emitOffer","SimplePeerWrapper#send","Socket","Socket#__reviewBuffer","Socket#_connect","Socket#_disconnect","Socket#_receiveData","Socket#_receiveOffer","Socket#_send","Socket#connect","Socket#disconnect","Socket#emitOffer","Socket#send"]}},"app":{"title":"n2n-wrtc","entrance":"content:readme","base":"/n2n-wrtc/","server":"github","meta":null,"routing":{"method":"query","caseSensitive":true}},"template":{"name":"docma-template-zebra","description":"Zebra - Default template for Docma. https://github.com/onury/docma","version":"2.1.0","supportedDocmaVersion":">=2.0.0","author":"Onur Yıldırım","license":"MIT","mainHTML":"index.html","options":{"title":{"label":"n2n-wrtc","href":"?content=readme"},"sidebar":{"enabled":true,"outline":"tree","collapsed":false,"toolbar":true,"itemsFolded":false,"itemsOverflow":"crop","badges":true,"search":true,"animations":true},"symbols":{"autoLink":true,"params":"list","enums":"list","props":"list","meta":false},"contentView":{"bookmarks":true},"navbar":{"enabled":true,"dark":false,"animations":true,"menu":[{"label":"Docs","iconClass":"fas fa-book","href":"?api"},{"label":"Download","iconClass":"fas fa-cloud-download-alt","items":[{"label":"Latest Version","href":"https://github.com/RAN3D/n2n-wrtc/archive/master.zip"}],"chevron":true},{"label":"GitHub","iconClass":"fab fa-github","href":"https://github.com/RAN3D/n2n-wrtc","target":"_blank"}],"fixed":true},"logo":null}},"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","defaultApiName":"_def_","logsEnabled":false}));

!function(){"use strict";var i="path"===docma.app.routing.method;docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),i&&(page("(/)?api/:apiName?",function(a,e){var o=a.params.apiName||docma._.defaultApiName,t=docma.createRoute(o,DocmaWeb.Route.Type.API);if(!t||!t.exists())return e();t.apply()}),page("(/)?:content",function(a,e){var o=a.params.content,t=docma.createRoute(o,DocmaWeb.Route.Type.CONTENT);if(!t||!t.exists())return e();t.apply()})),page("(/)?",function(c,r){(function(){if(i){var a=sessionStorage.getItem("redirectPath")||null;if(a)return sessionStorage.removeItem("redirectPath"),docma.info("Redirecting to:",a),page.redirect(a),!0}return!1})()||setTimeout(function(){var a,e,o,t=(e=c.querystring,o=e||window.location.search,/^[?&]/.test(o)&&(o=o.slice(1)),o||null);if(i){if(t)return r();a=docma._.appEntranceRI}else docma.log("Query-string:",t),a=t?docma.createRouteFromQuery(t):docma._.appEntranceRI;var n=!a||!a.exists();if(docma._trigger(DocmaWeb.Event.Navigate,[n?null:a]),n)return r();a.isCurrent()||a.apply()},100)}),page("*",function(a){docma.warn("Unknown Route:",a.path),docma.createRoute(null).apply()}),docma.info("Docma SPA Configuration:"),docma.info("App Title:          ",docma.app.title),docma.info("Routing Method:     ",docma.app.routing.method),docma.info("App Server:         ",docma.app.server),docma.info("Base Path:          ",docma.app.base),docma.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){docma._.initialLoad=!0,docma._.appEntranceRI=docma.createRouteFromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),docma.info("Docma SPA loaded!")}}();